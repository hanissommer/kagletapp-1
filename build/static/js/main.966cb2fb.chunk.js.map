{"version":3,"sources":["logos/logo.png","firebaseSetup.ts","components/Login.tsx","components/SplashScreen.tsx","components/PostButton.tsx","logos/favicon.png","components/ToolbarAndChips.tsx","components/EventCards.tsx","components/EventCardContainer.tsx","components/HomeScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","useStyles","makeStyles","theme","root","flexGrow","button","alignContent","alignItems","justify","marginTop","spacing","marginBottom","borderRadius","padding","logo","height","width","menuButton","marginRight","toolbar","paddingTop","paddingBottom","backgroundColor","title","alignSelf","color","form","margin","appicon","marginPassword","textfield","backdrop","zIndex","drawer","Alert","props","elevation","variant","createTheme","palette","primary","main","light","dark","secondary","Login","classes","history","useHistory","React","useState","open","vertical","horizontal","state","setState","setOpen","setOpen1","submitDisabled","setSubmitDisabled","setEmail","handleClose","validity","emailRef","current","value","includes","signIn","handleToggle","buttons","Fragment","ThemeProvider","Button","size","className","disabled","onClick","useRef","actionCodeSettings","url","handleCodeInApp","a","sendSignInLinkToEmail","window","localStorage","setItem","console","error","isSignInWithEmailLink","location","href","email","getItem","prompt","redirectToHomepage","signInWithEmailLink","then","result","removeItem","catch","log","Grid","container","justifyContent","direction","AppBar","position","Toolbar","IconButton","push","Typography","component","align","style","item","alt","src","noValidate","autoComplete","xs","TextField","id","label","required","placeholder","inputRef","helperText","onKeyPress","event","key","onChange","target","Snackbar","autoHideDuration","anchorOrigin","onClose","message","severity","Backdrop","CircularProgress","field","SplashScreen","onAuthStateChanged","user","popoverFab","formControl","minWidth","selectEmpty","dateAndTime","marginLeft","maxWidth","fabicon","top","right","bottom","left","locationField","eventBox","PostButton","loggedInUserEmail","setLoggedInUserEmail","useEffect","fetchIsLoggedIn","database","eventName","setEventName","eventLocation","setEventLocation","eventType","setEventType","Date","eventTime","setEventTime","handleDropDownChange","checkValidity","handleEventNameInput","handleKeyPress","handleEventLocationInput","handleEventTime","date","postButton","ref","getTime","hostEmail","alert","reload","popupId","popupState","Fab","bindTrigger","Popover","bindPopover","transformOrigin","Box","p","FormControl","InputLabel","Select","autoWidth","MenuItem","utils","DateFnsUtils","DateTimePicker","inputVariant","onError","disablePast","InputProps","endAdornment","InputAdornment","endIcon","Icon","borderColor","subtitle","extendedIcon","cardcomponent","cardTitle","paddingLeft","cardpositions","username","textAlign","rightAlignText","accountIcon","minHeight","maxHeight","paddingBlock","bottomNav","iconText","fontSize","logoButton","ToolbarAndChips","signOut","refreshPage","Avatar","cardLooks","rsvpButton","EventCards","Card","CardHeader","sm","name","time","CardContent","type","CardActions","EventCardContainer","eventsList","setEventsList","timeConverter","timeFromFirebase","stringToDate","moment","format","dateToday","setHours","getHours","timeTwoHoursAgoMS","startAfter","orderByChild","once","snapshot","fetchedEvents","forEach","child","val","fetchData","Object","values","map","HomeScreen","loggedInUserId","setLoggedInUserId","uid","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAAe,MAA0B,iC,kDCYzCA,IAASC,cATc,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAKJ,IAAMC,EAAOR,IAASQ,O,sECavBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNC,aAAc,SACdC,WAAY,aACZC,QAAS,SACTC,UAAWP,EAAMQ,QAAQ,GACzBC,aAAcT,EAAMQ,QAAQ,GAC5BE,aAAc,GACdC,QAAS,gBAEXC,KAAM,CACJC,OAAQ,IACRC,MAAO,IACPV,aAAc,SACdE,QAAS,SACTD,WAAY,cAEdU,WAAY,CACVC,YAAahB,EAAMQ,QAAQ,IAE7BS,QAAS,CACPC,WAAYlB,EAAMQ,QAAQ,GAC1BW,cAAenB,EAAMQ,QAAQ,GAC7BY,gBAAiB,WAEnBC,MAAO,CACLnB,SAAU,EACVoB,UAAW,WACXC,MAAO,WAETC,KAAM,CACJ,QAAS,CACPC,OAAQzB,EAAMQ,QAAQ,KAG1BkB,QAAS,GACTC,eAAgB,CACdF,OAAQzB,EAAMQ,QAAQ,IAExBoB,UAAW,CACTd,MAAO,KAETe,SAAU,CACRC,OAAQ9B,EAAM8B,OAAOC,OAAS,EAC9BR,MAAO,YAQX,SAASS,EAAMC,GACb,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAKtD,IAAMjC,EAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAKCE,EAAQ,WACnB,IAAMC,EAAU9C,IACV+C,EAAUC,cAEhB,EAA0BC,IAAMC,SAAgB,CAC9CC,MAAM,EACNC,SAAU,SACVC,WAAY,WAHd,mBAAOC,EAAP,KAAcC,EAAd,KAKQH,EAAyBE,EAAzBF,SAAUC,EAAeC,EAAfD,WAClB,EAAwBJ,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaK,EAAb,KACA,EAA0BP,IAAMC,UAAS,GAAzC,mBAAcO,GAAd,WACA,EAA4CR,IAAMC,UAAS,GAA3D,mBAAOQ,EAAP,KAAuBC,EAAvB,KACA,EAA2BV,IAAMC,SAAS,IAA1C,mBAAeU,GAAf,WAcMC,EAAc,WAClBN,EAAS,2BAAKD,GAAN,IAAaH,MAAM,KAC3BK,GAAQ,GACRC,GAAS,IAQX,SAASK,IACHC,EAASC,QAASC,MAAMC,SAAS,cACnCC,IACAC,KAjBFT,GAAkB,GA+BpB,IAAMU,EACJ,cAAC,IAAMC,SAAP,UACE,cAACC,EAAA,EAAD,CAAerE,MAAOA,EAAtB,SACE,cAACsE,EAAA,EAAD,CACEC,KAAK,QACLpC,QAAQ,WACRZ,MAAM,UACNiD,UAAW5B,EAAQzC,OACnBsE,SAAUjB,EACVkB,QAAS,WACPd,KAPJ,gCAgBAM,EAAe,WACnBZ,GAASL,IAYPY,EAAWc,iBAAyB,MACpCC,EAAqB,CACvBC,IAAK,2BACLC,iBAAiB,GAGbb,EAAM,uCAAG,sBAAAc,EAAA,+EAELlF,EAAKmF,sBACTnB,EAASC,QAASC,MAClBa,GAJS,OAMXK,OAAOC,aAAaC,QAAQ,iBAAkBtB,EAASC,QAASC,OANrD,+CAQXqB,QAAQC,MAAR,MARW,wDAAH,qDAaZ,IACE,GAAIxF,EAAKyF,sBAAsBL,OAAOM,SAASC,MAAO,CACpD,IAAIC,GAAQR,OAAOC,aAAaQ,QAAQ,kBACxC,IAAKD,GAGH,OAFAA,GAAQR,OAAOU,OAAO,8CACtBC,KACO,qEAEP/F,EACGgG,oBAAoBJ,GAAOR,OAAOM,SAASC,MAC3CM,MAAK,SAACC,GACLd,OAAOC,aAAac,WAAW,kBAC/BJ,QAEDK,OAAM,SAACZ,GACND,QAAQc,IAAIb,OAIpB,MAAOA,IACPD,QAAQC,MAAMA,IAShB,SAASO,KACPX,OAAOM,SAASC,KAAO,0BAKzB,OACE,qBAAKhB,UAAW5B,EAAQ3C,KAAxB,SAEE,eAACkG,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,UAAU,SAAlD,UAEE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAStE,UAAW,EAArC,SACE,cAACuE,EAAA,EAAD,CAASjC,UAAW5B,EAAQ3B,QAA5B,SACE,cAACyF,EAAA,EAAD,CACE,aAAW,OACXhC,QAAS,kBAAM7B,EAAQ8D,KAAK,kBAF9B,SAIE,cAAC,IAAD,UAMN,eAACC,EAAA,EAAD,CAAYC,UAAU,MAAMC,MAAM,SAASC,MAAO,CAAElG,OAAQ,SAA5D,UACE,cAACsF,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,qBAAKxC,UAAU,eAAf,SACE,qBAAKyC,IAAI,OAAOzC,UAAW5B,EAAQhC,KAAMsG,IAAKtG,QAIlD,cAACuF,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,sBAAMxC,UAAW5B,EAAQpB,KAAM2F,YAAU,EAACC,aAAa,KAAvD,SACE,cAACjB,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAAChD,EAAA,EAAD,CAAerE,MAAOA,EAAtB,SACE,cAACsH,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,QAENnC,MAAO7B,EACPiE,UAAQ,EACRlG,MAAM,YACNY,QAAQ,WACRuF,YAAY,YACZC,SAAU9D,EACVW,UAAW5B,EAAQhB,UACnBgG,WAAW,0CACXC,WAtGK,SAACC,GACJ,UAAdA,EAAMC,KACRnE,KAqGcoE,SArJO,SAACF,GACxBpE,EAASoE,EAAMG,OAAOlE,OAgBS,IAA3BF,EAASC,QAASC,OACpBN,GAAkB,cAyId,gCACGU,EACD,cAAC+D,EAAA,EAAD,CACEC,iBAAkB,IAClBC,aAAc,CAAElF,WAAUC,cAC1BF,KAAMA,EACNoF,QAAS1E,EACT2E,QAAQ,yBALV,SAQE,cAAC,EAAD,CAAOD,QAAS1E,EAAa4E,SAAS,UAAtC,6CAFKrF,EAAWC,GAMlB,cAACqF,EAAA,EAAD,CACEhE,UAAW5B,EAAQf,SACnBoB,KAAMA,EACNyB,QAASf,EAHX,SAKE,cAAC8E,EAAA,EAAD,CAAkBlH,MAAM,0B,QC1ShCzB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZU,KAAM,CACJC,OAAQ,IACRC,MAAO,IACPV,aAAc,SACdE,QAAS,SACTD,WAAY,cAEdF,OAAQ,CACNC,aAAc,SACdC,WAAY,aACZC,QAAS,SACTC,UAAWP,EAAMQ,QAAQ,GACzBE,aAAc,GACdC,QAAS,gBAEXM,QAAS,CACPC,WAAYlB,EAAMQ,QAAQ,GAC1BW,cAAenB,EAAMQ,QAAQ,GAC7BY,gBAAiB,WAEnBC,MAAO,CACLnB,SAAU,EACVoB,UAAW,WACXC,MAAO,WAETmH,MAAO,CACL,QAAS,CACPjH,OAAQzB,EAAMQ,QAAQ,GACtBM,MAAO,aAKPd,EAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAKCkG,EAAe,WAC1B,IAAM/F,EAAU9C,IACV+C,EAAUC,cAahB,OAVAzD,IAASQ,OAAO+I,oBAAmB,SAACC,GAC9BA,IAMJ5D,OAAOM,SAASC,KAAO,8BAIvB,cAACnB,EAAA,EAAD,CAAerE,MAAOA,EAAtB,SACE,eAACmG,EAAA,EAAD,CAAMC,WAAS,EAAC9F,QAAQ,SAASD,WAAW,SAASiG,UAAU,SAA/D,UACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAStE,UAAW,EAArC,SACE,cAACuE,EAAA,EAAD,CAASjC,UAAW5B,EAAQ3B,YAE9B,cAACkF,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,qBAAKxC,UAAU,gBAAf,SACE,qBAAKyC,IAAI,OAAOzC,UAAW5B,EAAQhC,KAAMsG,IAAKtG,QAIlD,cAACuF,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,cAAC1C,EAAA,EAAD,CACEC,KAAK,QACLhD,MAAM,UACNY,QAAQ,YACRqC,UAAW5B,EAAQzC,OACnBuE,QAAS,kBAAM7B,EAAQ8D,KAAK,WAL9B,2B,uKCtDJ7G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZ4I,WAAY,CACVnI,QAASX,EAAMQ,QAAQ,IAQzBuI,YAAa,CACXtH,OAAQzB,EAAMQ,QAAQ,GACtBwI,SAAU,KAEZC,YAAa,CACX1I,UAAWP,EAAMQ,QAAQ,IAE3B0I,YAAa,CACXC,WAAYnJ,EAAMQ,QAAQ,GAC1BwI,SAAU,IACVI,SAAU,KAEZC,QAAS,CACP5H,OAAQ,EACR6H,IAAK,OACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACNjD,SAAU,SAEZkD,cAAe,CACbV,SAAU,IACVI,SAAU,KAEZO,SAAU,CACRX,SAAU,IACVI,SAAU,KAEZxH,UAAW,CACTd,MAAO,SAIE8I,GAAa,WACxB,IAAMhH,EAAU9C,KAGhB,EAAkDkD,mBAAS,IAA3D,mBAAO6G,EAAP,KAA0BC,EAA1B,KACAC,qBAAU,YACa,uCAAG,sBAAAhF,EAAA,sDACtB1F,IAASQ,OAAO+I,oBAAmB,SAACC,GAEhCiB,EADEjB,EACmBA,EAAKpD,MAEL,OALH,2CAAH,qDASrBuE,KACC,CAACH,IAGJ,IAAII,EAAW5K,IAAS4K,WACxB,EAAkClH,IAAMC,SAAS,IAAjD,mBAAOkH,EAAP,KAAkBC,EAAlB,KACA,EAA0CpH,IAAMC,SAAS,IAAzD,mBAAOoH,EAAP,KAAsBC,EAAtB,KACA,EAAkCtH,IAAMC,SAAS,IAAjD,mBAAOsH,EAAP,KAAkBC,EAAlB,KACA,EAAkCxH,IAAMC,SAAsB,IAAIwH,MAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4C3H,IAAMC,UAAS,GAA3D,mBAAOQ,EAAP,KAAuBC,EAAvB,KACA,EAAkCV,IAAMC,UAAS,GAAjD,mBAcM2H,IAdN,UAc6B,SAC3B7C,GAEAyC,EAAazC,EAAMG,OAAOlE,OAC1B6G,OAEIC,GAAuB,SAC3B/C,GAEAqC,EAAarC,EAAMG,OAAOlE,OAC1B6G,MAIIE,GAAiB,WACrBF,MAYIG,GAA2B,SAC/BjD,GAEAuC,EAAiBvC,EAAMG,OAAOlE,OAC9B6G,MAGII,GAAkB,SAACC,GACvBP,EAAaO,GACbL,MAEI5K,GAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAKZ,SAASmI,KAOLnH,EALa,IAAbyG,GACiB,IAAjBE,GACa,IAAbE,GACa,MAAbG,GAYJ,SAASS,KAlFPjB,EACGkB,IAAI,UACJxE,KAAK,CACJuD,UAAWA,EACXE,cAAeA,EACfE,UAAWA,EACXG,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWW,UACtBC,UAAWxB,IAEZ5D,MAAMqF,OAsETrG,OAAOM,SAASgG,SAqBlB,OACE,cAAC,IAAD,CAAYpJ,QAAQ,UAAUqJ,QAAQ,qBAAtC,SACG,SAACC,GAAD,OACC,gCAEE,cAACpH,EAAA,EAAD,CAAerE,MAAOA,GAAtB,SACE,eAAC0L,EAAA,EAAD,yBACEnK,MAAM,UACNY,QAAQ,WACRqC,UAAW5B,EAAQyG,SACfsC,sBAAYF,IAJlB,cAME,cAAC,IAAD,IANF,kBAWF,cAACG,EAAA,EAAD,2BACMC,sBAAYJ,IADlB,IAEErD,aAAc,CACZlF,SAAU,MACVC,WAAY,QAEd2I,gBAAiB,CACf5I,SAAU,SACVC,WAAY,QARhB,SAYE,cAACkB,EAAA,EAAD,CAAerE,MAAOA,GAAtB,SACE,cAAC+L,EAAA,EAAD,CAAKC,EAAG,EAAGxH,UAAW5B,EAAQ+G,SAA9B,SACE,cAAC/C,EAAA,EAAD,UACE,eAACT,EAAA,EAAD,CAAMC,WAAS,EAAC5F,QAAS,EAAzB,UACE,cAAC2F,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,cAACJ,EAAA,EAAD,CAAYzE,QAAQ,KAApB,4BAEF,cAACgE,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAACT,EAAA,EAAD,UACE,cAACqF,EAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CACE/F,MAAM,YACNY,QAAQ,WACRqC,UAAW5B,EAAQhB,UACnB4F,MAAM,aACNK,WAAYiD,GACZ9C,SAAU6C,GACVpD,UAAQ,UAMhB,cAACtB,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAACT,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,CACE/F,MAAM,YACNkG,UAAQ,EACRtF,QAAQ,WACRqC,UAAW5B,EAAQhB,UACnB4F,MAAM,iBACNK,WAAYiD,GACZ9C,SAAU+C,SAKhB,cAAC5E,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAACT,EAAA,EAAD,UACE,eAACqF,EAAA,EAAD,CACE1K,MAAM,YACNY,QAAQ,WACRqC,UAAW5B,EAAQmG,YACnBtB,UAAQ,EAJV,UAME,cAACyE,EAAA,EAAD,iCACA,eAACC,EAAA,EAAD,CACE5K,MAAM,YACNwC,MAAOuG,EACPtC,SAAU2C,GACVnD,MAAM,aACN4E,WAAS,EALX,UAOE,cAACC,EAAA,EAAD,CAAU9K,MAAM,YAAYwC,MAAO,eAAnC,0BAGA,cAACsI,EAAA,EAAD,CAAU9K,MAAM,YAAYwC,MAAO,aAAnC,wBAGA,cAACsI,EAAA,EAAD,CAAU9K,MAAM,YAAYwC,MAAO,cAAnC,mCAQR,cAACoC,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAACT,EAAA,EAAD,UACE,cAAC,KAAD,CAAyB0F,MAAOC,IAAhC,SACE,cAACC,GAAA,EAAD,CACE/E,UAAQ,EACRlG,MAAM,YACNiG,MAAM,aACNiF,aAAa,WACbjI,UAAW5B,EAAQsG,YACnBnF,MAAO0G,EACPzC,SAAUgD,GACV0B,QAAStH,QAAQc,IACjByG,aAAW,EACXC,WAAY,CACVC,aACE,cAACC,GAAA,EAAD,CAAgBtG,SAAS,MAAzB,SACE,cAACE,EAAA,EAAD,UACE,cAAC,KAAD,iBAUhB,cAACP,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAf,SACE,cAAC/C,EAAA,EAAD,CACEI,QAASwG,GACT3J,MAAM,YACNY,QAAQ,YACR4K,QAAS,cAACC,GAAA,EAAD,mBACTvI,SAAUjB,EALZ,uC,+BC/UP,OAA0B,oC,UC8BnC1D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNoB,MAAO,MACPnB,aAAc,SACdC,WAAY,aACZC,QAAS,SACTC,UAAWP,EAAMQ,QAAQ,GACzBE,aAAc,GACdC,QAAS,eACTsM,YAAa,WAGflM,WAAY,CACVC,YAAahB,EAAMQ,QAAQ,IAE7BS,QAAS,CACPC,WAAYlB,EAAMQ,QAAQ,IAC1BW,cAAenB,EAAMQ,QAAQ,IAC7BY,gBAAiB,WAEnBC,MAAO,CACLnB,SAAU,EACVqB,MAAO,WAET2L,SAAU,CACRhN,SAAU,EACVoB,UAAW,WACXC,MAAO,WAETK,UAAW,CACTd,MAAO,KAETqM,aAAc,CACZnM,YAAahB,EAAMQ,QAAQ,IAE7B4M,cAAe,CACbtM,MAAO,OAETuM,UAAW,CACTnN,SAAU,EACVqB,MAAO,UACP+L,YAAatN,EAAMQ,QAAQ,IAE7B+M,cAAe,CACb9M,aAAc,IAEhB+M,SAAU,CACRC,UAAW,QAEbC,eAAgB,CACdD,UAAW,SAEbE,YAAa,CACXC,UAAW,GACX5E,SAAU,GACVzH,MAAO,SAETG,QAAS,CACPb,OAAQ,KACRC,MAAO,KACP8M,UAAW,GACX5E,SAAU,GACV6E,UAAW,GACXzE,SAAU,GACV0E,aAAc,GAEhBzE,QAAS,CACP5H,OAAQ,EACR6H,IAAK,OACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACNjD,SAAU,SAEZuH,UAAW,CACTjN,MAAO,OACP0F,SAAU,QACVgD,OAAQ,GAEVV,WAAY,CACVnI,QAASX,EAAMQ,QAAQ,IAEzBuI,YAAa,CACXC,SAAU,IACVI,SAAU,KAEZF,YAAa,CACXC,WAAYnJ,EAAMQ,QAAQ,GAC1BwI,SAAU,IACVI,SAAU,KAEZM,cAAe,CACbV,SAAU,IACVI,SAAU,KAEZO,SAAU,CACRX,SAAU,IACVI,SAAU,KAEZ4E,SAAU,CACRzM,MAAO,UACP0M,SAAU,GACVX,YAAa,GAEfY,WAAY,CACVL,UAAW,GACXzE,SAAU,QAID+E,GAAkB,WAC7B,IAAMvL,EAAU9C,KAGhB,SAASsO,IACPvO,EACGuO,UACAtI,MAAK,WACJuI,OAEDpI,OAAM,SAACZ,GACND,QAAQc,IAAI,mBAAoBb,MAItC,SAASgJ,IACPpJ,OAAOM,SAASgG,SAgBlB,IAAMvL,EAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAKZ,OACE,cAAC8D,EAAA,EAAD,CAAQC,SAAS,SAAStE,UAAW,EAArC,SACE,cAACuE,EAAA,EAAD,CAASjC,UAAW5B,EAAQ3B,QAA5B,SACE,eAACkF,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,MACVD,eAAe,gBACfhG,WAAW,SAJb,UAME,cAAC8F,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,eAACb,EAAA,EAAD,CACEC,WAAS,EACT5F,QAAS,EACT8F,UAAU,MACVD,eAAe,aACfhG,WAAW,SALb,UAOE,cAACqG,EAAA,EAAD,CAAYlC,UAAW5B,EAAQsL,WAAYxJ,QAAS2J,EAApD,SACE,cAACC,GAAA,EAAD,CAAQ9J,UAAW5B,EAAQlB,QAASwF,IAAKtG,OAG3C,oBAAI4D,UAAS,UAAK5B,EAAQoL,SAAb,IAAyB,WAAtC,yBAGJ,cAAC7H,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,cAAC,IAAD,CAAY7E,QAAQ,UAAUqJ,QAAQ,qBAAtC,SACG,SAACC,GAAD,OACC,gCACE,cAAC/E,EAAA,EAAD,yBACE,aAAW,0BACX,gBAAc,eACViF,uBAAYF,IAHlB,aAKE,cAAC,KAAD,CACEjH,UAAW5B,EAAQ+K,iBAGvB,cAAC/B,EAAA,EAAD,2BACMC,sBAAYJ,IADlB,IAEErD,aAAc,CACZlF,SAAU,SACVC,WAAY,QAEd2I,gBAAiB,CACf5I,SAAU,MACVC,WAAY,SARhB,SAWE,cAAC4I,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAACpF,EAAA,EAAD,UACE,cAACvC,EAAA,EAAD,CAAerE,MAAOA,EAAtB,SACE,cAACsE,EAAA,EAAD,CACEnC,QAAQ,YACRZ,MAAM,YACNmD,QAAS0J,EAHX,6C,6DCvOpBtO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNC,aAAc,SACdC,WAAY,aACZC,QAAS,SACTC,UAAWP,EAAMQ,QAAQ,GACzBE,aAAc,GACdC,QAAS,gBAGXI,WAAY,CACVC,YAAahB,EAAMQ,QAAQ,IAE7BS,QAAS,CACPC,WAAYlB,EAAMQ,QAAQ,IAC1BW,cAAenB,EAAMQ,QAAQ,IAC7BY,gBAAiB,WAEnBC,MAAO,CACLnB,SAAU,EACVqB,MAAO,WAET2L,SAAU,CACRhN,SAAU,EACVoB,UAAW,WACXC,MAAO,WAETK,UAAW,CACTd,MAAO,KAETqM,aAAc,CACZnM,YAAahB,EAAMQ,QAAQ,IAE7B4M,cAAe,CACbtM,MAAO,OAGTyM,cAAe,CACb9M,aAAc,IAEhB+M,SAAU,CACRC,UAAW,QAEbC,eAAgB,CACdD,UAAW,QACXpH,eAAgB,UAElBsH,YAAa,CACXC,UAAW,GACX5E,SAAU,GACVzH,MAAO,SAETG,QAAS,CACPb,OAAQ,KACRC,MAAO,KACP8M,UAAW,GACX5E,SAAU,GACV8E,aAAc,GAEhBzE,QAAS,CACP5H,OAAQ,EACR6H,IAAK,OACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACNjD,SAAU,SAEZuH,UAAW,CACTjN,MAAO,OACP0F,SAAU,QACVgD,OAAQ,GAEVV,WAAY,CACVnI,QAASX,EAAMQ,QAAQ,IAEzBuI,YAAa,CACXC,SAAU,IACVI,SAAU,KAEZF,YAAa,CACXC,WAAYnJ,EAAMQ,QAAQ,GAC1BwI,SAAU,IACVI,SAAU,KAEZM,cAAe,CACbV,SAAU,IACVI,SAAU,KAEZO,SAAU,CACRX,SAAU,IACVI,SAAU,KAEZmF,UAAW,CACT7N,aAAc,IAEhB8N,WAAY,CACVpN,gBAAiB,UACjBV,aAAc,IAEhB2M,UAAW,CACTnN,SAAU,EACVqB,MAAO,UACPkM,UAAW,OACXrM,gBAAiB,eAIfpB,GAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAsBCgM,GAAqC,SAACxM,GACjD,IAAMW,EAAU9C,KAChB,OAEE,cADA,CACA,OAAK0E,UAAW5B,EAAQwK,cAAxB,UAEE,eAACsB,GAAA,EAAD,CAAMvM,QAAQ,WAAWqC,UAAW5B,EAAQ2L,UAA5C,UAME,cAAC,IAAD,CAAkBvO,MAAOA,GAAzB,SACE,cAAC2O,GAAA,EAAD,CACEnK,UAAW5B,EAAQyK,UACnBhM,MAEE,eAAC8E,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAIuH,GAAI,EAAGpK,UAAU,UAApC,SACGvC,EAAM4M,OAET,cAAC1I,EAAA,EAAD,CACEa,MAAI,EACJK,GAAI,GACJuH,GAAI,EACJvO,WAAW,WACXmE,UAAW5B,EAAQ8K,eALrB,SAOGzL,EAAM6M,cAOjB,cAACC,GAAA,EAAD,UACE,eAAC5I,EAAA,EAAD,CAAMC,WAAS,EAAC5F,QAAS,EAAzB,UACE,cAAC2F,EAAA,EAAD,CACEa,MAAI,EACJK,GAAI,GACJuH,GAAI,EACJtI,UAAU,cACVD,eAAe,WACfhG,WAAW,aANb,SAQE,cAACuG,EAAA,EAAD,CAAYpC,UAAW5B,EAAQ4K,SAA/B,SAA0CvL,EAAM+M,SAElD,cAAC7I,EAAA,EAAD,CAAMa,MAAI,EAACK,GAAI,GAAIuH,GAAI,EAAvB,SACE,eAAChI,EAAA,EAAD,CAAYpC,UAAW5B,EAAQ8K,eAA/B,UACE,cAAC,KAAD,IACCzL,EAAMsD,mBAKf,cAAC0J,GAAA,EAAD,UACE,cAAC9I,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,MACVD,eAAe,gBACfhG,WAAW,WAJb,SAiBE,cAAC8F,EAAA,EAAD,CACEa,MAAI,EACJK,GAAI,GACJhH,WAAW,WACXmE,UAAW5B,EAAQ8K,eAJrB,SAME,cAAC9G,EAAA,EAAD,UAAa3E,EAAMwD,iBA3E7B,W,qBCnJSyJ,GAAqB,WAChC,MAAoClM,mBAAS,IAA7C,mBAAOmM,EAAP,KAAmBC,EAAnB,KAuCA,SAASC,EAAcC,GACrB,IACIC,EAAe,IAAI/E,KADN8E,GAEjB,OAAOE,KAAOD,GAAcE,OAAO,mBAGrC,OA5CA1F,qBAAU,YACO,uCAAG,8BAAAhF,EAAA,uDAQZ2K,EAAY,IAAIlF,MAEVmF,SAASD,EAAUE,WAAa,GAEtCC,EAAoBH,EAAUtE,UAElChG,QAAQc,IAAIwJ,GAEIrQ,IACb4K,WACAkB,IAAI,UACJ2E,WAAWD,GACXE,aAAa,aAENC,KAAK,SAASlK,MAAK,SAACmK,GAG5B,IAAIC,EAAgB,GACpBD,EAASE,SAAQ,SAAUC,GACzBF,EAAcvJ,KAAKyJ,EAAMC,UAE3BjB,EAAcc,MA7BA,2CAAH,qDAgCfI,KACC,IAEHlL,QAAQc,IAAI,aAAciJ,GASxB,mCACGoB,OAAOC,OAAOrB,GAAYsB,KAAI,SAAC3I,GAAD,OAC7B,cAAC,GAAD,CACE+G,KAAM/G,EAAMoC,UACZ4E,KAAMO,EAAcvH,EAAM2C,WAC1BlF,SAAUuC,EAAMsC,cAChB4E,KAAMlH,EAAMwC,UACZ7E,MAAOqC,EAAMuD,kBChDjBvL,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,OAIRF,GAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAMCiO,GAAa,WACxB,MAA4C1N,mBAAS,IAArD,mBAAO2N,EAAP,KAAuBC,EAAvB,KACA7G,qBAAU,YACa,uCAAG,sBAAAhF,EAAA,sDACtB1F,IAASQ,OAAO+I,oBAAmB,SAACC,GAC9BA,GACF+H,EAAkB/H,EAAKgI,KACvBzL,QAAQc,IAAI2C,EAAKgI,MAEjBD,EAAkB,SANA,2CAAH,qDAUrB5G,KACC,CAAC2G,IACJ,IAAM/N,EAAU9C,KACV+C,EAAUC,cAEhB,OACE,sBAAK0B,UAAW5B,EAAQ3C,KAAxB,UAEsB,KAAnB0Q,GAEC,cAACxK,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASD,eAAe,SAAlD,SACE,eAACO,EAAA,EAAD,CACEC,UAAU,MACVC,MAAM,SACNC,MAAO,CAAElG,OAAQ,SAHnB,UAME,cAAC,GAAD,IANF,OAQE,eAACsF,EAAA,EAAD,CACEC,WAAS,EACT5F,QAAS,EACT8F,UAAU,SACVjG,WAAW,SACXC,QAAQ,SALV,UAOE,cAACsG,EAAA,EAAD,CAAYzE,QAAQ,KAApB,qDAPF,OAWE,cAACyE,EAAA,EAAD,CAAYzE,QAAQ,KAApB,qEAXF,OAeE,cAACkC,EAAA,EAAD,CAAerE,MAAOA,GAAtB,SACE,cAACmG,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,cAAC1C,EAAA,EAAD,CACEC,KAAK,QACLpC,QAAQ,WACRZ,MAAM,UACNiD,UAAU,aACVuC,MAAO,CAAErG,aAAc,GAAIC,QAAS,gBACpC+D,QAAS,kBAAM7B,EAAQ8D,KAAK,WAN9B,+BAkBQ,KAAnBgK,GACC,cAACxK,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASD,eAAe,SAAlD,SACE,eAACO,EAAA,EAAD,CACEC,UAAU,MACVC,MAAM,SACNC,MAAO,CAAElG,OAAQ,SAHnB,UAKE,cAAC,GAAD,IALF,OAOE,cAACsF,EAAA,EAAD,CACEC,WAAS,EACT5F,QAAS,EACT8F,UAAU,SACVjG,WAAW,SACXC,QAAQ,SALV,SAOE,cAAC,GAAD,MAEF,cAAC6F,EAAA,EAAD,CAAMa,MAAI,EAAV,SACE,cAAC,GAAD,eCrHRhH,GAAQoC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,cAQG,SAASqO,KACtB,OACE,cAACzM,EAAA,EAAD,CAAerE,MAAOA,GAAtB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO+Q,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,EAAD,IAAiB,OAEnB,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,UACE,cAAC,EAAD,IAAU,OAEZ,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,UACE,cAAC,GAAD,IAAe,OAEjB,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,EAAD,aCrCZ,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrL,MAAK,YAAkD,IAA/CsL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,GAAD,MAEFc,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.966cb2fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.53ca20cd.png\";","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBQRGfJynPI0BznjfK0Gg2fcn0v7IOzke4\",\n    authDomain: \"kaglet-91224.firebaseapp.com\",\n    projectId: \"kaglet-91224\",\n    storageBucket: \"kaglet-91224.appspot.com\",\n    messagingSenderId: \"407470091369\",\n    appId: \"1:407470091369:web:b59563c510fc47655086f8\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\n","import { FormControl, Grid, IconButton, Toolbar } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../logos/logo.png\";\nimport { Typography, AppBar } from \"@material-ui/core\";\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRef } from \"react\";\nimport { auth } from \"../firebaseSetup\";\nimport React, { useState, KeyboardEvent, KeyboardEventHandler } from \"react\";\nimport Snackbar, { SnackbarOrigin } from \"@material-ui/core/Snackbar\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  makeStyles,\n  createStyles,\n  Theme,\n  createTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n//defining the styles\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n    borderRadius: 20,\n    padding: \"0.25rem 2rem\",\n  },\n  logo: {\n    height: 300,\n    width: 300,\n    alignContent: \"center\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    backgroundColor: \"#ffffff\",\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: \"flex-end\",\n    color: \"#000000\",\n  },\n  form: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n    },\n  },\n  appicon: {},\n  marginPassword: {\n    margin: theme.spacing(1),\n  },\n  textfield: {\n    width: 300,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport interface State extends SnackbarOrigin {\n  open: boolean;\n}\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//the actual function coming out of this class hence the export.\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\n\nexport const Login = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [state, setState] = React.useState<State>({\n    open: false,\n    vertical: \"bottom\",\n    horizontal: \"center\",\n  });\n  const { vertical, horizontal } = state;\n  const [open, setOpen] = React.useState(false);\n  const [open1, setOpen1] = React.useState(false);\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\n  const [email1, setEmail] = React.useState(\"\");\n\n  const handleClick = (newState: SnackbarOrigin) => () => {\n    setState({ open: true, ...newState });\n  };\n\n  const handleClickOpen = () => {\n    setOpen1(true);\n  };\n\n  const handleError = () => {\n    setSubmitDisabled(true);\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n    setOpen(false);\n    setOpen1(false);\n  };\n\n  const handleEmailInput = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setEmail(event.target.value as string);\n    checkValidity();\n  };\n\n  function validity() {\n    if (emailRef.current!.value.includes(\"@kzoo.edu\")) {\n      signIn();\n      handleToggle();\n      handleClick({ vertical: \"bottom\", horizontal: \"center\" });\n    } else {\n      //handleClickOpen();\n      handleError();\n    }\n  }\n\n  function checkValidity() {\n    if (emailRef.current!.value != \"\") {\n      setSubmitDisabled(false);\n    }\n  }\n\n  const buttons = (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <Button\n          size=\"large\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n          disabled={submitDisabled}\n          onClick={() => {\n            validity();\n          }}\n        >\n          Get Login Link\n        </Button>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  //enter key check\n  const handleKeyPress = (event: { key: string }) => {\n    if (event.key === \"Enter\") {\n      validity();\n    }\n  };\n\n  // firebaseItems\n  //getting the email data from the text field\n  let emailRef = useRef<HTMLInputElement>(null);\n  var actionCodeSettings = {\n    url: \"https://kaglet.app/login\",\n    handleCodeInApp: true,\n  };\n\n  const signIn = async () => {\n    try {\n      await auth.sendSignInLinkToEmail(\n        emailRef.current!.value,\n        actionCodeSettings\n      );\n      window.localStorage.setItem(\"emailForSignIn\", emailRef.current!.value);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  //firebase login items\n  try {\n    if (auth.isSignInWithEmailLink(window.location.href)) {\n      var email = window.localStorage.getItem(\"emailForSignIn\");\n      if (!email) {\n        email = window.prompt(\"Please provide your email for confirmation\");\n        redirectToHomepage();\n        return <div>Try again in a non-private window.</div>;\n      } else {\n        auth\n          .signInWithEmailLink(email, window.location.href)\n          .then((result) => {\n            window.localStorage.removeItem(\"emailForSignIn\");\n            redirectToHomepage();\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  //this will be called later.\n  const signOut = async () => {\n    await auth.signOut();\n  };\n\n  //redirects if the user is already logged in\n  function redirectToHomepage() {\n    window.location.href = \"https://kaglet.app/home\";\n  }\n\n  //firebase-ends\n\n  return (\n    <div className={classes.root}>\n      {/* grid containing all elements in the screen */}\n      <Grid container justifyContent=\"center\" direction=\"column\">\n        {/* app bar which has the back button */}\n        <AppBar position=\"sticky\" elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              aria-label=\"back\"\n              onClick={() => history.push(\"/splashscreen\")}\n            >\n              <ArrowBackRoundedIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        {/* this holds the components after the app  */}\n        <Typography component=\"div\" align=\"center\" style={{ height: \"100vh\" }}>\n          <Grid item>\n            <div className=\"col-centered\">\n              <img alt=\"Logo\" className={classes.logo} src={logo} />\n            </div>\n          </Grid>\n\n          <Grid item>\n            <form className={classes.form} noValidate autoComplete=\"on\">\n              <Grid item xs={12}>\n                <ThemeProvider theme={theme}>\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"Email\"\n                    //helperText=\"Incorrect entry.\"\n                    error={submitDisabled}\n                    required\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    placeholder=\"@kzoo.edu\"\n                    inputRef={emailRef}\n                    className={classes.textfield}\n                    helperText=\"Please use your @kzoo.edu school email.\"\n                    onKeyPress={handleKeyPress}\n                    onChange={handleEmailInput}\n                  />\n                </ThemeProvider>\n              </Grid>\n            </form>\n          </Grid>\n          <div>\n            {buttons}\n            <Snackbar\n              autoHideDuration={100000000}\n              anchorOrigin={{ vertical, horizontal }}\n              open={open}\n              onClose={handleClose}\n              message=\"Link successfully sent\"\n              key={vertical + horizontal}\n            >\n              <Alert onClose={handleClose} severity=\"success\">\n                Check your email! 🤪\n              </Alert>\n            </Snackbar>\n            <Backdrop\n              className={classes.backdrop}\n              open={open}\n              onClick={handleClose}\n            >\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          </div>\n        </Typography>\n      </Grid>\n    </div>\n  );\n};\n","import { AppBar, Grid, Toolbar } from \"@material-ui/core\";\nimport {\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../logos/logo.png\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport MuiThemeProvider from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  logo: {\n    height: 300,\n    width: 300,\n    alignContent: \"center\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n  },\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    marginTop: theme.spacing(2),\n    borderRadius: 20,\n    padding: \"0.25rem 2rem\",\n  },\n  toolbar: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    backgroundColor: \"#ffffff\",\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: \"flex-end\",\n    color: \"#000000\",\n  },\n  field: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n      width: \"25ch\",\n    },\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\n\nexport const SplashScreen = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  //if the user is logged in, it redirects to the home page\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      redirectToHomepage();\n    }\n  });\n\n  function redirectToHomepage() {\n    window.location.href = \"https://kaglet.app/home\";\n  }\n  // only dealing with sending to other screens\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n        <AppBar position=\"static\" elevation={0}>\n          <Toolbar className={classes.toolbar}></Toolbar>\n        </AppBar>\n        <Grid item>\n          <div className=\"col-centeredd\">\n            <img alt=\"Logo\" className={classes.logo} src={logo} />\n          </div>\n        </Grid>\n\n        <Grid item>\n          <Button\n            size=\"large\"\n            color=\"primary\"\n            variant=\"contained\"\n            className={classes.button}\n            onClick={() => history.push(\"/login\")}\n          >\n            Login\n          </Button>\n        </Grid>\n\n        {/* <Grid item>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={() => history.push(\"/home\")}\n          >\n            Home Screen Test\n          </Button>\n        </Grid> */}\n      </Grid>\n    </ThemeProvider>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  Typography,\n  InputLabel,\n  MenuItem,\n  Select,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popover from \"@material-ui/core/Popover\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { TextField } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport firebase from \"firebase\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\nimport EventRoundedIcon from \"@material-ui/icons/EventRounded\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\n\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { useDebugValue } from \"react\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nexport interface EventDetails {\n  name: string;\n  type?: string;\n  location?: string;\n  time?: string;\n  email?: string;\n  submitDisabled?: boolean;\n  textValid?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  popoverFab: {\n    padding: theme.spacing(2),\n  },\n  /*\n  formControl: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 270,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  dateAndTime: {\n    marginLeft: theme.spacing(1),\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  fabicon: {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n  },\n  locationField: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  eventBox: {\n    minWidth: 200,\n    maxWidth: 500,\n  },\n  textfield: {\n    width: 200,\n  },\n}));\n\nexport const PostButton = () => {\n  const classes = useStyles();\n\n  // Get user's email address\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState(\"\");\n  useEffect(() => {\n    const fetchIsLoggedIn = async () => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          setLoggedInUserEmail(user.email!);\n        } else {\n          setLoggedInUserEmail(\"\");\n        }\n      });\n    };\n    fetchIsLoggedIn();\n  }, [loggedInUserEmail]);\n\n  //pushing into Firebase\n  var database = firebase.database();\n  const [eventName, setEventName] = React.useState(\"\");\n  const [eventLocation, setEventLocation] = React.useState(\"\");\n  const [eventType, setEventType] = React.useState(\"\");\n  const [eventTime, setEventTime] = React.useState<Date | null>(new Date());\n  const [submitDisabled, setSubmitDisabled] = React.useState(true);\n  const [textValid, setTextValid] = React.useState(false);\n  const Push = () => {\n    database\n      .ref(\"events\")\n      .push({\n        eventName: eventName,\n        eventLocation: eventLocation,\n        eventType: eventType,\n        eventTime: eventTime?.getTime(),\n        hostEmail: loggedInUserEmail,\n      })\n      .catch(alert);\n  };\n\n  const handleDropDownChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setEventType(event.target.value as string);\n    checkValidity();\n  };\n  const handleEventNameInput = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setEventName(event.target.value as string);\n    checkValidity();\n  };\n\n  //delete key check\n  const handleKeyPress = () => {\n    checkValidity();\n  };\n\n  const handleEventNameInput1 = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    if (eventName == \"\") {\n      setEventName(event.target.value as string);\n      checkValidity();\n    }\n  };\n\n  const handleEventLocationInput = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setEventLocation(event.target.value as string);\n    checkValidity();\n  };\n\n  const handleEventTime = (date: Date | null) => {\n    setEventTime(date);\n    checkValidity();\n  };\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#EE6C4D\",\n        light: \"#ff9b79\",\n        dark: \"#b53a22\",\n      },\n      secondary: {\n        main: \"#4C5760\",\n        light: \"#78848d\",\n        dark: \"#242e36\",\n      },\n    },\n  });\n\n  function checkValidity() {\n    if (\n      eventName != \"\" &&\n      eventLocation != \"\" &&\n      eventType != \"\" &&\n      eventTime != null\n    ) {\n      setSubmitDisabled(false);\n    } else {\n      setSubmitDisabled(true);\n    }\n  }\n\n  function refreshPage() {\n    window.location.reload();\n  }\n\n  function postButton() {\n    Push();\n    refreshPage();\n  }\n\n  function handleValidation(this: any) {\n    const { eventName, eventLocation, eventType, eventTime } = this.state;\n    let error = \"\";\n    let formIsValid = true;\n    if (!eventName || !eventLocation || !eventType || !eventTime) {\n      formIsValid = false;\n      error = \"Input fields cannot be empty\";\n    }\n\n    this.setState({ error: error });\n    return formIsValid;\n  }\n\n  return (\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n      {(popupState) => (\n        <div>\n          {/* Floating action button in the bottom right corner, the styles are defined in useStyles */}\n          <ThemeProvider theme={theme}>\n            <Fab\n              color=\"primary\"\n              variant=\"extended\"\n              className={classes.fabicon}\n              {...bindTrigger(popupState)}\n            >\n              <AddIcon />\n              New Event\n            </Fab>\n          </ThemeProvider>\n          {/* Opens popover, the rest inside is self explanatory */}\n          <Popover\n            {...bindPopover(popupState)}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n            }}\n            transformOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\",\n            }}\n          >\n            {/* Box that shows up when button is clicked, all following tags are self explanatory*/}\n            <ThemeProvider theme={theme}>\n              <Box p={2} className={classes.eventBox}>\n                <Typography>\n                  <Grid container spacing={2}>\n                    <Grid item>\n                      <Typography variant=\"h6\">Create Event</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography>\n                        <FormControl>\n                          <TextField\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            className={classes.textfield}\n                            label=\"Event Name\"\n                            onKeyPress={handleKeyPress}\n                            onChange={handleEventNameInput}\n                            required\n                          ></TextField>\n                        </FormControl>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Typography>\n                        <TextField\n                          color=\"secondary\"\n                          required\n                          variant=\"outlined\"\n                          className={classes.textfield}\n                          label=\"Event Location\"\n                          onKeyPress={handleKeyPress}\n                          onChange={handleEventLocationInput}\n                        ></TextField>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Typography>\n                        <FormControl\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                          required\n                        >\n                          <InputLabel>Select Event Types</InputLabel>\n                          <Select\n                            color=\"secondary\"\n                            value={eventType}\n                            onChange={handleDropDownChange}\n                            label=\"Event Type\"\n                            autoWidth\n                          >\n                            <MenuItem color=\"secondary\" value={\"Campus Event\"}>\n                              Campus Event\n                            </MenuItem>\n                            <MenuItem color=\"secondary\" value={\"Study Sesh\"}>\n                              Study Sesh\n                            </MenuItem>\n                            <MenuItem color=\"secondary\" value={\"House Party\"}>\n                              House Party\n                            </MenuItem>\n                          </Select>\n                        </FormControl>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Typography>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                          <DateTimePicker\n                            required\n                            color=\"secondary\"\n                            label=\"Event Time\"\n                            inputVariant=\"outlined\"\n                            className={classes.dateAndTime}\n                            value={eventTime}\n                            onChange={handleEventTime}\n                            onError={console.log}\n                            disablePast\n                            InputProps={{\n                              endAdornment: (\n                                <InputAdornment position=\"end\">\n                                  <IconButton>\n                                    <EventRoundedIcon />\n                                  </IconButton>\n                                </InputAdornment>\n                              ),\n                            }}\n                          />\n                        </MuiPickersUtilsProvider>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Button\n                        onClick={postButton}\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        endIcon={<Icon>send</Icon>}\n                        disabled={submitDisabled}\n                      >\n                        Post\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Typography>\n              </Box>\n            </ThemeProvider>\n          </Popover>\n        </div>\n      )}\n    </PopupState>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/favicon.0d794a5d.png\";","import {\n  Typography,\n  AppBar,\n  Box,\n  Popover,\n  Button,\n  Avatar,\n} from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Toolbar } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport logo from \"../logos/favicon.png\";\nimport logoText from \"../logos/HomeHeader.png\";\nimport PopupState, { bindPopover } from \"material-ui-popup-state\";\nimport {\n  usePopupState,\n  bindTrigger,\n  bindMenu,\n} from \"material-ui-popup-state/hooks\";\nimport React from \"react\";\nimport { auth } from \"../firebaseSetup\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\n// import LocalBarIcon from \"@material-ui/icons/LocalBar\";\n// import SchoolRoundedIcon from \"@material-ui/icons/SchoolRounded\";\n// import BackpackRoundedIcon from \"@material-ui/icons/BackpackRounded\";\n// import { Chip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  button: {\n    color: \"red\",\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    marginTop: theme.spacing(3),\n    borderRadius: 20,\n    padding: \"0.25rem 2rem\",\n    borderColor: \"#becddc\",\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    backgroundColor: \"#ffffff\",\n  },\n  title: {\n    flexGrow: 1,\n    color: \"#000000\",\n  },\n  subtitle: {\n    flexGrow: 1,\n    alignSelf: \"flex-end\",\n    color: \"#000000\",\n  },\n  textfield: {\n    width: 200,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(2),\n  },\n  cardcomponent: {\n    width: \"90%\",\n  },\n  cardTitle: {\n    flexGrow: 1,\n    color: \"#000000\",\n    paddingLeft: theme.spacing(7),\n  },\n  cardpositions: {\n    marginBottom: 12,\n  },\n  username: {\n    textAlign: \"left\",\n  },\n  rightAlignText: {\n    textAlign: \"right\",\n  },\n  accountIcon: {\n    minHeight: 30,\n    minWidth: 30,\n    color: \"black\",\n  },\n  appicon: {\n    height: \"3%\",\n    width: \"3%\",\n    minHeight: 28,\n    minWidth: 28,\n    maxHeight: 42,\n    maxWidth: 42,\n    paddingBlock: 2,\n  },\n  fabicon: {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n  },\n  bottomNav: {\n    width: \"100%\",\n    position: \"fixed\",\n    bottom: 0,\n  },\n  popoverFab: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  dateAndTime: {\n    marginLeft: theme.spacing(1),\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  locationField: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  eventBox: {\n    minWidth: 200,\n    maxWidth: 500,\n  },\n  iconText: {\n    color: \"#543B31\",\n    fontSize: 25,\n    paddingLeft: 1,\n  },\n  logoButton: {\n    maxHeight: 45,\n    maxWidth: 45,\n  },\n}));\n\nexport const ToolbarAndChips = () => {\n  const classes = useStyles();\n  //this will be called later.\n\n  function signOut() {\n    auth\n      .signOut()\n      .then(() => {\n        refreshPage();\n      })\n      .catch((error) => {\n        console.log(\"error logging in\", error);\n      });\n  }\n\n  function refreshPage() {\n    window.location.reload();\n  }\n\n  // const [flag1, setFlag1] = React.useState(true);\n  // const [flag2, setFlag2] = React.useState(true);\n  // const [flag3, setFlag3] = React.useState(true);\n  // const handleClickCampus = () => {\n  //   setFlag1(!flag1);\n  // };\n  // const handleClickStudy = () => {\n  //   setFlag2(!flag2);\n  // };\n  // const handleClickParty = () => {\n  //   setFlag3(!flag3);\n  // };\n\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#EE6C4D\",\n        light: \"#ff9b79\",\n        dark: \"#b53a22\",\n      },\n      secondary: {\n        main: \"#4C5760\",\n        light: \"#78848d\",\n        dark: \"#242e36\",\n      },\n    },\n  });\n\n  return (\n    <AppBar position=\"sticky\" elevation={0}>\n      <Toolbar className={classes.toolbar}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Grid\n              container\n              spacing={0}\n              direction=\"row\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <IconButton className={classes.logoButton} onClick={refreshPage}>\n                <Avatar className={classes.appicon} src={logo} />\n              </IconButton>\n              {/* <img className={classes.appicon} src={logo} alt=\"Logo\" />{\" \"} */}\n              <h1 className={`${classes.iconText} ${\"heading\"}`}>Kaglet</h1>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n              {(popupState) => (\n                <div>\n                  <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    {...bindTrigger(popupState)}\n                  >\n                    <AccountCircle\n                      className={classes.accountIcon}\n                    ></AccountCircle>\n                  </IconButton>\n                  <Popover\n                    {...bindPopover(popupState)}\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    }}\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"right\",\n                    }}\n                  >\n                    <Box p={2}>\n                      <Typography>\n                        <ThemeProvider theme={theme}>\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={signOut}\n                          >\n                            Logout\n                          </Button>\n                        </ThemeProvider>\n                      </Typography>\n                    </Box>\n                  </Popover>\n                </div>\n              )}\n            </PopupState>\n          </Grid>\n        </Grid>\n      </Toolbar>\n\n      {/* <Toolbar className={classes.toolbar}>\n        <Grid container spacing={1}>\n          <Grid item>\n            <Chip\n              onClick={handleClickCampus}\n              label=\"Campus Events\"\n              clickable\n              color=\"secondary\"\n              variant={flag1 ? \"outlined\" : \"default\"}\n              icon={<SchoolRoundedIcon />}\n            />\n          </Grid>\n\n          <Grid item>\n            <Chip\n              onClick={handleClickStudy}\n              variant={flag2 ? \"outlined\" : \"default\"}\n              label=\"Study Seshes\"\n              clickable\n              color=\"secondary\"\n              icon={<BackpackRoundedIcon />}\n            />\n          </Grid>\n\n          <Grid item>\n            <Chip\n              onClick={handleClickParty}\n              variant={flag3 ? \"outlined\" : \"default\"}\n              label=\"House Parties\"\n              clickable\n              color=\"secondary\"\n              icon={<LocalBarIcon />}\n            />\n          </Grid>\n        </Grid>\n      </Toolbar> */}\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport { Typography, Card } from \"@material-ui/core\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    marginTop: theme.spacing(3),\n    borderRadius: 20,\n    padding: \"0.25rem 2rem\",\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    backgroundColor: \"#ffffff\",\n  },\n  title: {\n    flexGrow: 1,\n    color: \"#000000\",\n  },\n  subtitle: {\n    flexGrow: 1,\n    alignSelf: \"flex-end\",\n    color: \"#000000\",\n  },\n  textfield: {\n    width: 200,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(2),\n  },\n  cardcomponent: {\n    width: \"90%\",\n  },\n\n  cardpositions: {\n    marginBottom: 12,\n  },\n  username: {\n    textAlign: \"left\",\n  },\n  rightAlignText: {\n    textAlign: \"right\",\n    justifyContent: \"center\",\n  },\n  accountIcon: {\n    minHeight: 30,\n    minWidth: 30,\n    color: \"black\",\n  },\n  appicon: {\n    height: \"4%\",\n    width: \"4%\",\n    minHeight: 30,\n    minWidth: 30,\n    paddingBlock: 5,\n  },\n  fabicon: {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n  },\n  bottomNav: {\n    width: \"100%\",\n    position: \"fixed\",\n    bottom: 0,\n  },\n  popoverFab: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  dateAndTime: {\n    marginLeft: theme.spacing(1),\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  locationField: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  eventBox: {\n    minWidth: 200,\n    maxWidth: 500,\n  },\n  cardLooks: {\n    borderRadius: 12,\n  },\n  rsvpButton: {\n    backgroundColor: \"#ff8c1a\",\n    borderRadius: 12,\n  },\n  cardTitle: {\n    flexGrow: 1,\n    color: \"#000000\",\n    textAlign: \"left\",\n    backgroundColor: \"#EE6C4D\",\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n  // typography: {\n  //   h1: {\n  //     fontFamily: \"Nunito\",\n  //     fontSize: 30,\n  //   },\n  //   h2: {\n  //     fontFamily: \"Roboto\",\n  //     fontSize: 14,\n  //   },\n  // },\n});\nexport interface EventDetails {\n  name: string;\n  type?: string;\n  location?: string;\n  time?: string;\n  email?: string;\n}\n\nexport const EventCards: React.FC<EventDetails> = (props: EventDetails) => {\n  const classes = useStyles();\n  return (\n    // holding the cards in this div, using useStyles from up top\n    <div className={classes.cardcomponent}>\n      {/* card component for each card */}\n      <Card variant=\"outlined\" className={classes.cardLooks}>\n        {/* \n        card header holds title (orange part) \n        gets data from firebase where it says props.xxx \n        \"xxx\" is defined in the interface before the export const EventCards\n        */}\n        <MuiThemeProvider theme={theme}>\n          <CardHeader\n            className={classes.cardTitle}\n            title={\n              // a grid to hold name and time with good alignment\n              <Grid container>\n                <Grid item xs={12} sm={6} className=\"heading\">\n                  {props.name}\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  alignItems=\"flex-end\"\n                  className={classes.rightAlignText}\n                >\n                  {props.time}\n                </Grid>\n              </Grid>\n            }\n          />\n        </MuiThemeProvider>\n        {/* card content (the white part),  */}\n        <CardContent>\n          <Grid container spacing={2}>\n            <Grid\n              item\n              xs={12}\n              sm={6}\n              direction=\"row-reverse\"\n              justifyContent=\"flex-end\"\n              alignItems=\"flex-start\"\n            >\n              <Typography className={classes.username}>{props.type}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography className={classes.rightAlignText}>\n                <LocationOnOutlinedIcon></LocationOnOutlinedIcon>\n                {props.location}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"flex-end\"\n          >\n            {/* RSVP button, does not do anything yet so this is commented out. */}\n            {/* <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              size=\"small\"\n              disableElevation\n              className={classes.rsvpButton}\n            >\n              RSVP +1\n            </Button> */}\n\n            <Grid\n              item\n              xs={12}\n              alignItems=\"flex-end\"\n              className={classes.rightAlignText}\n            >\n              <Typography>{props.email}</Typography>\n            </Grid>\n          </Grid>\n        </CardActions>\n      </Card>\n      &nbsp;\n    </div>\n  );\n};\n","import firebase from \"firebase\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { EventDetails, EventCards } from \"./EventCards\";\nimport moment from \"moment\";\n\nexport const GetEventCards = () => {};\n\nexport const EventCardContainer = () => {\n  const [eventsList, setEventsList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      /** Backup method: REST API */\n      //   const result = await axios(\n      //     \"https://kaglet-91224-default-rtdb.firebaseio.com/events.json\"\n      //   );\n      // console.log(Object.values(result.data));\n      // setEventsList(Object.values(result.data));\n\n      var dateToday = new Date();\n\n      dateToday.setHours(dateToday.getHours() - 2);\n\n      var timeTwoHoursAgoMS = dateToday.getTime();\n\n      console.log(dateToday);\n\n      let allEvents = firebase\n        .database()\n        .ref(\"events\")\n        .startAfter(timeTwoHoursAgoMS)\n        .orderByChild(\"eventTime\");\n\n      allEvents.once(\"value\").then((snapshot) => {\n        // console.log(snapshot.val());\n        // setEventsList(Object.values(snapshot.val()));\n        var fetchedEvents = [] as any;\n        snapshot.forEach(function (child) {\n          fetchedEvents.push(child.val());\n        });\n        setEventsList(fetchedEvents);\n      });\n    };\n    fetchData();\n  }, []);\n\n  console.log(\"eventsList\", eventsList);\n\n  function timeConverter(timeFromFirebase: string) {\n    let dateString = timeFromFirebase;\n    let stringToDate = new Date(dateString);\n    return moment(stringToDate).format(\"MMMM Do, h:mm a\");\n  }\n\n  return (\n    <>\n      {Object.values(eventsList).map((event: any) => (\n        <EventCards\n          name={event.eventName}\n          time={timeConverter(event.eventTime)}\n          location={event.eventLocation}\n          type={event.eventType}\n          email={event.hostEmail}\n        />\n      ))}\n    </>\n  );\n};\n","import {\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { PostButton } from \"./PostButton\";\nimport { Typography } from \"@material-ui/core\";\nimport { ToolbarAndChips } from \"./ToolbarAndChips\";\nimport { EventCardContainer } from \"./EventCardContainer\";\nimport firebase from \"firebase\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 0,\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\n\n//homescreen function which is checking if the user is logged in or not. If user, then set user id etc etc.\nexport const HomeScreen = () => {\n  const [loggedInUserId, setLoggedInUserId] = useState(\"\");\n  useEffect(() => {\n    const fetchIsLoggedIn = async () => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          setLoggedInUserId(user.uid);\n          console.log(user.uid);\n        } else {\n          setLoggedInUserId(\"sf\");\n        }\n      });\n    };\n    fetchIsLoggedIn();\n  }, [loggedInUserId]);\n  const classes = useStyles();\n  const history = useHistory();\n  //return statement that contains the UI\n  return (\n    <div className={classes.root}>\n      {/* only shows this if the user is logged in (it should contain something in the string if it exists) */}\n      {loggedInUserId === \"\" && (\n        //Grid holding all elements in the homescreen UI\n        <Grid container direction=\"column\" justifyContent=\"center\">\n          <Typography\n            component=\"div\"\n            align=\"center\"\n            style={{ height: \"100vh\" }}\n          >\n            {/* Toolbar component being imported from the other screen */}\n            <ToolbarAndChips />\n            &nbsp;\n            <Grid\n              container\n              spacing={2}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Typography variant=\"h5\">\n                Please log in to view awesome K events!\n              </Typography>\n              &nbsp;\n              <Typography variant=\"h6\">\n                If you've logged in, try again in a non-private window.\n              </Typography>\n              &nbsp;\n              <ThemeProvider theme={theme}>\n                <Grid item>\n                  <Button\n                    size=\"large\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    className=\"subheading\"\n                    style={{ borderRadius: 20, padding: \"0.25rem 2rem\" }}\n                    onClick={() => history.push(\"/login\")}\n                  >\n                    Login\n                  </Button>\n                </Grid>\n              </ThemeProvider>\n            </Grid>\n          </Typography>\n        </Grid>\n      )}\n\n      {/* otherwise, if it's not an empty string, it should print this. All tags are self-explantory (from Material UI) */}\n      {loggedInUserId !== \"\" && (\n        <Grid container direction=\"column\" justifyContent=\"center\">\n          <Typography\n            component=\"div\"\n            align=\"center\"\n            style={{ height: \"100vh\" }}\n          >\n            <ToolbarAndChips />\n            &nbsp;\n            <Grid\n              container\n              spacing={2}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <EventCardContainer />\n            </Grid>\n            <Grid item>\n              <PostButton />\n            </Grid>\n          </Typography>\n        </Grid>\n      )}\n    </div>\n  );\n};\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Login } from \"./components/Login\";\nimport { SplashScreen } from \"./components/SplashScreen\";\nimport { HomeScreen } from \"./components/HomeScreen\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n  // typography: {\n  //   fontFamily: [\"Nunito\", \"Roboto\"].join(\",\"),\n  // },\n});\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <SplashScreen />{\" \"}\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />{\" \"}\n          </Route>\n          <Route exact path=\"/home\">\n            <HomeScreen />{\" \"}\n          </Route>\n          <Route exact path=\"/splashscreen\">\n            <SplashScreen />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}