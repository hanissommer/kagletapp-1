{"version":3,"sources":["logos/logo.png","firebaseSetup.ts","components/LoginLogic.tsx","components/PostButton.tsx","logos/justLogo.png","logos/HomeHeader.png","components/signedInUserEmail.tsx","components/ToolbarAndChips.tsx","logos/partyImage1.png","logos/campusImage1.png","logos/studyImage1.png","logos/studyImage2.png","logos/studyImage3.png","logos/campusImage2.png","logos/campusImage3.png","logos/partyImage2.png","logos/partyImage3.png","avatars/1.png","avatars/2.png","avatars/3.png","avatars/4.png","avatars/5.png","components/PlusOneButton.tsx","components/NewCardUI.tsx","components/EventCardContainer.tsx","components/HomeScreen.tsx","components/NewLoginUI.tsx","components/NewSplashScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","useStyles","makeStyles","theme","root","flexGrow","button","alignContent","alignItems","justify","marginTop","spacing","marginBottom","borderRadius","padding","logo","height","width","toolbar","paddingTop","paddingBottom","backgroundColor","form","margin","textfield","backdrop","zIndex","drawer","color","LoginLogic","createTheme","palette","primary","main","light","dark","secondary","classes","useHistory","React","useState","open","vertical","horizontal","state","setState","setOpen","setOpen1","submitDisabled","setSubmitDisabled","setEmail","handleClose","validity","emailRef","current","value","includes","signIn","handleToggle","buttons","Button","size","variant","className","disabled","onClick","useRef","actionCodeSettings","url","handleCodeInApp","a","sendSignInLinkToEmail","window","localStorage","setItem","console","error","isSignInWithEmailLink","location","href","email","getItem","prompt","redirectToHomepage","signInWithEmailLink","then","result","removeItem","catch","log","Typography","component","align","style","Grid","container","direction","justifyContent","item","alt","screen","marginLeft","marginRight","maxWidth","src","TextField","id","label","required","placeholder","inputRef","helperText","onChange","event","target","Snackbar","anchorOrigin","onClose","message","Alert","severity","Backdrop","CircularProgress","popoverFab","formControl","minWidth","selectEmpty","dateAndTime","fabicon","top","right","bottom","left","position","fontFamily","locationField","eventBox","postEventText","textTransform","postButton","PostButton","loggedInUserEmail","setLoggedInUserEmail","useEffect","fetchIsLoggedIn","onAuthStateChanged","user","database","eventName","setEventName","eventLocation","setEventLocation","eventType","setEventType","Date","eventTime","setEventTime","handleDropDownChange","checkValidity","handleEventNameInput","handleKeyPress","handleEventLocationInput","handleEventTime","date","newPostKey","ref","child","push","key","postData","getTime","hostEmail","rsvpList","updates","update","PushData","reload","popupId","popupState","NoSsr","fonts","font","weights","Fab","bindTrigger","Popover","bindPopover","transformOrigin","Box","p","xs","FormControl","onKeyPress","InputLabel","Select","autoWidth","MenuItem","utils","DateFnsUtils","DateTimePicker","inputVariant","onError","disablePast","InputProps","endAdornment","InputAdornment","IconButton","endIcon","Icon","userEmail","paddingLeft","gridContainerEmailIcon","typography","fontSize","SignedInUserEmail","currentUser","nameExtract","nameOfPerson","toString","Name","fName","lName","point","i","length","toUpperCase","substring","Number","charAt","sx","bgcolor","initialOfPerson","fInitial","lInitial","spaceChecker","initialExtract","borderColor","alignSelf","secondToolobar","accountIcon","minHeight","appicon","maxHeight","paddingBlock","logoButton","logoText","linkButton","chips","buttonChips","ToolbarAndChips","styled","Paper","body2","textAlign","text","anchorEl","setAnchorEl","Boolean","handleClick","currentTarget","signOut","refreshPage","AppBar","elevation","Toolbar","Avatar","m","pt","startIcon","undefined","Menu","MenuListProps","Link","underline","BugReportRounded","HelpOutlineRounded","icon","display","rsvpCount","attending","check","UIDarray","eventID","PushFirebase","chooseText","random","Math","round","randomAvatarPicker","min","max","randomGenerator","avatar1","avatar2","avatar3","avatar4","avatar5","PlusOneButton","props","openSuccess","setOpenSuccess","openError","setOpenError","handleCloseSuccess","reason","handleCloseError","handleDisable","setCount","count","renderButtons","AvatarList","AvatarGroup","Array","map","index","autoHideDuration","cardcomponent","boxShadow","overflow","transition","transform","content","username","leftAlignText","cardLooks","cardTitle","cardSubtitle","media","titleIcon","locationSubtitle","join","background","borderTopLeftRadius","borderTopRightRadius","tag","title","fontWeight","author","borderBottomLeftRadius","borderBottomRightRadius","avatar","timeText","divDeets","textIcon","chooseImage","type","imageName","studyImage1","studyImage2","studyImage3","partyImage1","partyImage2","partyImage3","campusImage1","campusImage2","campusImage3","ExpandMore","expand","other","transitions","create","duration","shortest","NewCardUI","expanded","setExpanded","require","google","outlook","office365","yahoo","ics","Card","CardMedia","image","time","name","gap","useNewsInfoStyles","Collapse","in","timeout","unmountOnExit","CardContent","emailUrl","fullUrl","concat","newWindow","opener","openInNewTab","EventCardContainer","eventsList","setEventsList","timeConverter","timeFromFirebase","stringToDate","moment","format","fetchData","dateToday","setHours","getHours","timeTwoHoursAgoMS","startAfter","orderByChild","once","snapshot","fetchedEvents","forEach","val","Object","values","subtitle","LoggedOutUI","history","ThemeProvider","LoggedInUI","HomeScreen","loggedInUserId","setLoggedInUserId","uid","LoginUIMobile","flexFlow","flex","LoginUIBigScreen","NewLoginUI","isMobile","NewSplashScreen","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bc496d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3b8674fa.png\";","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBQRGfJynPI0BznjfK0Gg2fcn0v7IOzke4\",\r\n    authDomain: \"kaglet-91224.firebaseapp.com\",\r\n    projectId: \"kaglet-91224\",\r\n    storageBucket: \"kaglet-91224.appspot.com\",\r\n    messagingSenderId: \"407470091369\",\r\n    appId: \"1:407470091369:web:b59563c510fc47655086f8\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\n","import { Grid, IconButton, Toolbar } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport logo from \"../logos/logo.png\";\r\nimport { Typography, AppBar } from \"@material-ui/core\";\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useRef } from \"react\";\r\nimport { auth } from \"../firebaseSetup\";\r\nimport React from \"react\";\r\nimport Snackbar, { SnackbarOrigin } from \"@material-ui/core/Snackbar\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  makeStyles,\r\n  createTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport { width } from \"@mui/system\";\r\n\r\n//defining the styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    alignContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    justify: \"center\",\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n    borderRadius: 20,\r\n    padding: \"0.25rem 2rem\",\r\n  },\r\n  logo: {\r\n    height: \"15%\",\r\n    width: \"15%\",\r\n    alignContent: \"center\",\r\n    justify: \"center\",\r\n  },\r\n  toolbar: {\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(0),\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  form: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n\r\n  textfield: {\r\n    width: 300,\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport interface State extends SnackbarOrigin {\r\n  open: boolean;\r\n}\r\n\r\n//creating the primary and secondary theme with our colors\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#EE6C4D\",\r\n      light: \"#ff9b79\",\r\n      dark: \"#b53a22\",\r\n    },\r\n    secondary: {\r\n      main: \"#4C5760\",\r\n      light: \"#78848d\",\r\n      dark: \"#242e36\",\r\n    },\r\n  },\r\n});\r\n\r\n//export function that handles everything login, checks for validity, shows error/sucess and email refs etc\r\nexport const LoginLogic = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [state, setState] = React.useState<State>({\r\n    open: false,\r\n    vertical: \"bottom\",\r\n    horizontal: \"center\",\r\n  });\r\n  const { vertical, horizontal } = state;\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open1, setOpen1] = React.useState(false);\r\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\r\n  const [email1, setEmail] = React.useState(\"\");\r\n\r\n  const handleClick = (newState: SnackbarOrigin) => () => {\r\n    setState({ open: true, ...newState });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen1(true);\r\n  };\r\n\r\n  const handleError = () => {\r\n    setSubmitDisabled(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState({ ...state, open: false });\r\n    setOpen(false);\r\n    setOpen1(false);\r\n  };\r\n\r\n  const handleEmailInput = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setEmail(event.target.value as string);\r\n    checkValidity();\r\n  };\r\n\r\n  function validity() {\r\n    if (emailRef.current!.value.includes(\"@kzoo.edu\")) {\r\n      signIn();\r\n      handleToggle();\r\n      handleClick({ vertical: \"top\", horizontal: \"center\" });\r\n    } else {\r\n      //handleClickOpen();\r\n      handleError();\r\n    }\r\n  }\r\n\r\n  function isMobile() {\r\n    var mobileCompsStyle = {\r\n      margin: \"auto\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      maxWidth: \"60%\",\r\n      height: \"auto\",\r\n      width: \"auto\",\r\n    };\r\n\r\n    var screenCompsStyle = {\r\n      margin: \"auto\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      maxWidth: \"25%\",\r\n      height: \"auto\",\r\n      width: \"auto\",\r\n    };\r\n    if (window.screen.width < 600) {\r\n      return mobileCompsStyle;\r\n    } else {\r\n      return screenCompsStyle;\r\n    }\r\n  }\r\n  function checkValidity() {\r\n    if (emailRef.current!.value !== \"\") {\r\n      setSubmitDisabled(false);\r\n    }\r\n  }\r\n\r\n  const buttons = (\r\n    <Button\r\n      size=\"large\"\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n      disabled={submitDisabled}\r\n      onClick={() => {\r\n        validity();\r\n      }}\r\n    >\r\n      Get Login Link\r\n    </Button>\r\n  );\r\n\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  //enter key check\r\n  const handleKeyPress = (event: any) => {\r\n    event.preventDefault();\r\n    if (event.which === 13 || event.key === \"Enter\" || event.key === \"Go\") {\r\n      validity();\r\n    }\r\n  };\r\n\r\n  // firebaseItems\r\n  //getting the email data from the text field\r\n  let emailRef = useRef<HTMLInputElement>(null);\r\n  var actionCodeSettings = {\r\n    url: \"https://kaglet.app/login\",\r\n    handleCodeInApp: true,\r\n  };\r\n\r\n  const signIn = async () => {\r\n    try {\r\n      await auth.sendSignInLinkToEmail(\r\n        emailRef.current!.value,\r\n        actionCodeSettings\r\n      );\r\n      window.localStorage.setItem(\"emailForSignIn\", emailRef.current!.value);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  //firebase login items\r\n  try {\r\n    if (auth.isSignInWithEmailLink(window.location.href)) {\r\n      var email = window.localStorage.getItem(\"emailForSignIn\");\r\n      if (!email) {\r\n        email = window.prompt(\"Please provide your email for confirmation\");\r\n        redirectToHomepage();\r\n        return <div>Try again in a non-private window.</div>;\r\n      } else {\r\n        auth\r\n          .signInWithEmailLink(email, window.location.href)\r\n          .then((result) => {\r\n            window.localStorage.removeItem(\"emailForSignIn\");\r\n            redirectToHomepage();\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  // //this will be called later.\r\n  // const signOut = async () => {\r\n  //   await auth.signOut();\r\n  // };\r\n\r\n  //redirects if the user is already logged in\r\n  function redirectToHomepage() {\r\n    window.location.href = \"https://kaglet.app/home\";\r\n  }\r\n\r\n  //firebase-ends\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography component=\"div\" align=\"center\" style={{ height: \"100vh\" }}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <img alt=\"Logo\" style={isMobile()} src={logo} />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Email\"\r\n              //helperText=\"Incorrect entry.\"\r\n              error={submitDisabled}\r\n              required\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              placeholder=\"@kzoo.edu\"\r\n              inputRef={emailRef}\r\n              className={classes.textfield}\r\n              helperText=\"Please use your @kzoo.edu school email.\"\r\n              // onKeyPress={handleKeyPress}\r\n              onChange={handleEmailInput}\r\n            />\r\n          </Grid>\r\n          <Grid item>{buttons}</Grid>\r\n        </Grid>\r\n        <div>\r\n          <Grid item alignContent=\"center\">\r\n            <Snackbar\r\n              //autoHideDuration={100000000}\r\n              anchorOrigin={{ vertical: \"top\", horizontal }}\r\n              open={open}\r\n              onClose={handleClose}\r\n              message=\"Link successfully sent\"\r\n              key={vertical + horizontal}\r\n            >\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                Check your email! 🤪\r\n              </Alert>\r\n            </Snackbar>\r\n            <Backdrop\r\n              className={classes.backdrop}\r\n              open={open}\r\n              onClick={handleClose}\r\n            >\r\n              <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n          </Grid>\r\n        </div>\r\n      </Typography>\r\n      {/* </Grid> */}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {\r\n  Typography,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport firebase from \"firebase\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\r\nimport EventRoundedIcon from \"@material-ui/icons/EventRounded\";\r\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\r\nimport GoogleFontLoader from \"react-google-font-loader\";\r\nimport { NoSsr } from \"@material-ui/core\";\r\n\r\n// import { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n//import { useDebugValue } from \"react\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\n\r\nexport interface EventDetails {\r\n  name: string;\r\n  type?: string;\r\n  location?: string;\r\n  time?: string;\r\n  email?: string;\r\n  submitDisabled?: boolean;\r\n  textValid?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  popoverFab: {\r\n    padding: theme.spacing(2),\r\n    zIndex: 2,\r\n  },\r\n  /*\r\n  formControl: {\r\n    minWidth: 150,\r\n    maxWidth: 450,\r\n  },\r\n  */\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 270,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  dateAndTime: {\r\n    marginLeft: theme.spacing(1),\r\n    minWidth: 150,\r\n    maxWidth: 450,\r\n  },\r\n  fabicon: {\r\n    margin: 0,\r\n    top: \"auto\",\r\n    right: 20,\r\n    bottom: 20,\r\n    left: \"auto\",\r\n    position: \"fixed\",\r\n    borderRadius: 20,\r\n    zIndex: 2,\r\n    fontFamily: \"'Sen', sans-serif\",\r\n  },\r\n  locationField: {\r\n    minWidth: 150,\r\n    maxWidth: 450,\r\n  },\r\n  eventBox: {\r\n    minWidth: 200,\r\n    maxWidth: 500,\r\n  },\r\n  textfield: {\r\n    width: 200,\r\n  },\r\n  postEventText: {\r\n    fontFamily: \"'Sen', sans-serif\",\r\n    textTransform: \"none\",\r\n  },\r\n  postButton: {\r\n    borderRadius: 20,\r\n    textTransform: \"none\",\r\n    fontFamily: \"'Sen', sans-serif\",\r\n  },\r\n}));\r\n\r\nexport const PostButton = () => {\r\n  const classes = useStyles();\r\n\r\n  // Get user's email address\r\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState(\"\");\r\n  useEffect(() => {\r\n    const fetchIsLoggedIn = async () => {\r\n      firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n          setLoggedInUserEmail(user.email!);\r\n        } else {\r\n          setLoggedInUserEmail(\"\");\r\n        }\r\n      });\r\n    };\r\n    fetchIsLoggedIn();\r\n  }, [loggedInUserEmail]);\r\n\r\n  //pushing into Firebase\r\n  var database = firebase.database();\r\n  const [eventName, setEventName] = React.useState(\"\");\r\n  const [eventLocation, setEventLocation] = React.useState(\"\");\r\n  const [eventType, setEventType] = React.useState(\"\");\r\n  const [eventTime, setEventTime] = React.useState<Date | null>(new Date());\r\n  const [submitDisabled, setSubmitDisabled] = React.useState(true);\r\n\r\n  function PushData() {\r\n    const newPostKey = database.ref().child(\"events\").push().key;\r\n    var postData = {\r\n      id: newPostKey,\r\n      eventName: eventName,\r\n      eventLocation: eventLocation,\r\n      eventType: eventType,\r\n      eventTime: eventTime?.getTime(),\r\n      hostEmail: loggedInUserEmail,\r\n      rsvpList: [loggedInUserEmail],\r\n    };\r\n\r\n    var updates: any = {};\r\n    updates[\"events/\" + newPostKey] = postData;\r\n\r\n    console.log(firebase.database().ref().update(updates));\r\n  }\r\n\r\n  const handleDropDownChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    setEventType(event.target.value as string);\r\n    checkValidity();\r\n  };\r\n  const handleEventNameInput = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    setEventName(event.target.value as string);\r\n    checkValidity();\r\n  };\r\n\r\n  //delete key check\r\n  const handleKeyPress = () => {\r\n    checkValidity();\r\n  };\r\n\r\n  const handleEventLocationInput = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    setEventLocation(event.target.value as string);\r\n    checkValidity();\r\n  };\r\n\r\n  const handleEventTime = (date: Date | null) => {\r\n    setEventTime(date);\r\n    checkValidity();\r\n  };\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#EE6C4D\",\r\n        light: \"#ff9b79\",\r\n        dark: \"#b53a22\",\r\n      },\r\n      secondary: {\r\n        main: \"#4C5760\",\r\n        light: \"#78848d\",\r\n        dark: \"#242e36\",\r\n      },\r\n    },\r\n  });\r\n\r\n  function checkValidity() {\r\n    if (\r\n      eventName !== \"\" &&\r\n      eventLocation !== \"\" &&\r\n      eventType !== \"\" &&\r\n      eventTime != null\r\n    ) {\r\n      setSubmitDisabled(false);\r\n    } else {\r\n      setSubmitDisabled(true);\r\n    }\r\n  }\r\n\r\n  function refreshPage() {\r\n    window.location.reload();\r\n  }\r\n\r\n  function postButton() {\r\n    PushData();\r\n    refreshPage();\r\n  }\r\n\r\n  return (\r\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n      {(popupState) => (\r\n        <div>\r\n          <NoSsr>\r\n            <GoogleFontLoader\r\n              fonts={[{ font: \"Nunito\", weights: [400, 800] }]}\r\n            />\r\n          </NoSsr>\r\n          {/* Floating action button in the bottom right corner, the styles are defined in useStyles */}\r\n          <ThemeProvider theme={theme}>\r\n            <Fab\r\n              color=\"primary\"\r\n              variant=\"extended\"\r\n              //variant=\"outlined\"\r\n              className={classes.fabicon}\r\n              {...bindTrigger(popupState)}\r\n            >\r\n              <AddIcon />\r\n              <Typography className={classes.postEventText}>\r\n                New Event\r\n              </Typography>\r\n            </Fab>\r\n          </ThemeProvider>\r\n          {/* Opens popover, the rest inside is self explanatory */}\r\n          <Popover\r\n            {...bindPopover(popupState)}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"left\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"left\",\r\n            }}\r\n          >\r\n            {/* Box that shows up when button is clicked, all following tags are self explanatory*/}\r\n            <ThemeProvider theme={theme}>\r\n              <Box p={2} className={classes.eventBox}>\r\n                <Typography>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item>\r\n                      <Typography variant=\"h6\">Create Event</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography>\r\n                        <FormControl>\r\n                          <TextField\r\n                            color=\"secondary\"\r\n                            variant=\"outlined\"\r\n                            className={classes.textfield}\r\n                            label=\"Event Name\"\r\n                            onKeyPress={handleKeyPress}\r\n                            onChange={handleEventNameInput}\r\n                            required\r\n                          ></TextField>\r\n                        </FormControl>\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Typography>\r\n                        <TextField\r\n                          color=\"secondary\"\r\n                          required\r\n                          variant=\"outlined\"\r\n                          className={classes.textfield}\r\n                          label=\"Event Location\"\r\n                          onKeyPress={handleKeyPress}\r\n                          onChange={handleEventLocationInput}\r\n                        ></TextField>\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Typography>\r\n                        <FormControl\r\n                          color=\"secondary\"\r\n                          variant=\"outlined\"\r\n                          className={classes.formControl}\r\n                          required\r\n                        >\r\n                          <InputLabel>Select Event Types</InputLabel>\r\n                          <Select\r\n                            color=\"secondary\"\r\n                            value={eventType}\r\n                            onChange={handleDropDownChange}\r\n                            label=\"Event Type\"\r\n                            autoWidth\r\n                          >\r\n                            <MenuItem color=\"secondary\" value={\"Campus Event\"}>\r\n                              Campus Event\r\n                            </MenuItem>\r\n                            <MenuItem color=\"secondary\" value={\"Study Sesh\"}>\r\n                              Study Sesh\r\n                            </MenuItem>\r\n                            <MenuItem color=\"secondary\" value={\"House Party\"}>\r\n                              House Party\r\n                            </MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Typography>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <DateTimePicker\r\n                            required\r\n                            color=\"secondary\"\r\n                            label=\"Event Time\"\r\n                            inputVariant=\"outlined\"\r\n                            className={classes.dateAndTime}\r\n                            value={eventTime}\r\n                            onChange={handleEventTime}\r\n                            onError={console.log}\r\n                            disablePast\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <IconButton>\r\n                                    <EventRoundedIcon />\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Button\r\n                        onClick={postButton}\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        endIcon={<Icon>send</Icon>}\r\n                        disabled={submitDisabled}\r\n                        className={classes.postButton}\r\n                      >\r\n                        Post\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Typography>\r\n              </Box>\r\n            </ThemeProvider>\r\n          </Popover>\r\n        </div>\r\n      )}\r\n    </PopupState>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/justLogo.e643f375.png\";","export default __webpack_public_path__ + \"static/media/HomeHeader.7353d340.png\";","import { Grid, Typography } from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { Info, InfoSubtitle, InfoTitle } from \"@mui-treasury/components/info\";\r\n\r\n// function GetUserEmail() {\r\n//   const auth = firebase.auth();\r\n//   const user = auth.currentUser;\r\n//   if (user) {\r\n//     console.log(user.email);\r\n//     return user.email;\r\n//   } else {\r\n//     console.log(\"not logged in\");\r\n//     return \"Not Logged In\";\r\n//   }\r\n// }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  userEmail: {\r\n    paddingBottom: 5,\r\n    paddingLeft: 5,\r\n  },\r\n  gridContainerEmailIcon: {\r\n    paddingTop: 10,\r\n    paddingBottom: 5,\r\n  },\r\n  typography: {\r\n    fontSize: 35,\r\n  },\r\n}));\r\n\r\nexport const SignedInUserEmail = () => {\r\n  const classes = useStyles();\r\n  const auth = firebase.auth();\r\n  const user = auth.currentUser;\r\n  const nameExtract = () => {\r\n    let nameOfPerson:any = email\r\n    nameOfPerson.toString();\r\n    let Name:any = ''\r\n    let fName:any = ''\r\n    let lName:any = ''\r\n    let point:any = 0;\r\n    for (let i = 0; i < nameOfPerson.length; i++) {\r\n      if(nameOfPerson[i] == '.'){break}\r\n      fName = fName + (nameOfPerson[i]);\r\n      point++;\r\n    }\r\n    fName = fName[0].toUpperCase() + fName.substring(1)\r\n    Name = fName + (' ')\r\n    for (let i = (point+1); i < nameOfPerson.length; i++) {\r\n      if(nameOfPerson[i] == '@'){break}\r\n      if (Number(nameOfPerson[i]) == 1){break}\r\n      if (Number(nameOfPerson[i]) == 2){break}\r\n      lName = lName + (nameOfPerson[i]);\r\n    }\r\n    lName = lName.charAt(0).toUpperCase() + lName.substring(1)\r\n    Name = Name + lName\r\n    \r\n    return (Name);\r\n  }\r\n  const initialExtract = () => {\r\n    let initialOfPerson:any = nameExtract()\r\n    let Initial:any = ''\r\n    let fInitial:any = initialOfPerson[0]\r\n    let lInitial:any = ''\r\n    let spaceChecker:boolean = false\r\n    for (let i = 0; i < initialOfPerson.length; i++) {\r\n      if(spaceChecker == true){\r\n        lInitial = initialOfPerson[i]\r\n        break}\r\n        if (initialOfPerson[i] == ' '){spaceChecker = true}\r\n    }\r\n    Initial = fInitial + lInitial\r\n    return (Initial)\r\n  }\r\n\r\n  if (user) {\r\n    console.log(user.email);\r\n    var email: any;\r\n    email = user.email;\r\n  } else {\r\n    email = \"Not Logged In\";\r\n    console.log(email);\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row-reverse\"\r\n      justifyContent=\"flex-end\"\r\n      alignItems=\"center\"\r\n      className={classes.gridContainerEmailIcon}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Avatar sx={{ bgcolor: \"#EE6C4D\", width: 80, height: 80 }}>\r\n          <Typography className={classes.typography}>{initialExtract()}</Typography>\r\n        </Avatar>\r\n        &nbsp;\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <InfoSubtitle>{nameExtract()}</InfoSubtitle>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import {\r\n  Typography,\r\n  AppBar,\r\n  Box,\r\n  Popover,\r\n  Button,\r\n  Avatar,\r\n  MenuItem,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { Icon } from \"@iconify/react\";\r\n\r\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { Toolbar } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport logo from \"../logos/justLogo.png\";\r\nimport logoText from \"../logos/HomeHeader.png\";\r\nimport PopupState, { bindPopover } from \"material-ui-popup-state\";\r\nimport { bindTrigger } from \"material-ui-popup-state/hooks\";\r\nimport React from \"react\";\r\nimport { auth } from \"../firebaseSetup\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\nimport { SignedInUserEmail } from \"./signedInUserEmail\";\r\nimport MeetingRoomRoundedIcon from \"@mui/icons-material/MeetingRoomRounded\";\r\nimport { Link, Menu, styled } from \"@mui/material\";\r\nimport { BugReportRounded, HelpOutlineRounded } from \"@material-ui/icons\";\r\nimport { Info, InfoSubtitle, InfoTitle } from \"@mui-treasury/components/info\";\r\nimport firebase from \"firebase\";\r\n\r\n// import Stack from \"@mui/material/Stack\";\r\n\r\n// import LocalBarIcon from \"@material-ui/icons/LocalBar\";\r\n// import SchoolRoundedIcon from \"@material-ui/icons/SchoolRounded\";\r\n// import BackpackRoundedIcon from \"@material-ui/icons/BackpackRounded\";\r\n// import Slide from \"@mui/material/Slide\";\r\n// // import { Chip } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    alignContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    justify: \"center\",\r\n    borderRadius: 20,\r\n    borderColor: \"#becddc\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"none\",\r\n    fontFamily: \"'Sen', sans-serif\",\r\n  },\r\n\r\n  toolbar: {\r\n    paddingTop: theme.spacing(0.5),\r\n    paddingBottom: theme.spacing(0.5),\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  secondToolobar: {\r\n    paddingTop: theme.spacing(0.5),\r\n    paddingBottom: theme.spacing(0.5),\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  accountIcon: {\r\n    minHeight: 30,\r\n    minWidth: 30,\r\n    color: \"black\",\r\n  },\r\n  appicon: {\r\n    height: \"4%\",\r\n    width: \"4%\",\r\n    minHeight: 36,\r\n    minWidth: 36,\r\n    maxHeight: 56,\r\n    maxWidth: 56,\r\n    paddingBlock: 2,\r\n  },\r\n  fabicon: {\r\n    margin: 0,\r\n    top: \"auto\",\r\n    right: 20,\r\n    bottom: 20,\r\n    left: \"auto\",\r\n    position: \"fixed\",\r\n  },\r\n  logoButton: {\r\n    maxHeight: 45,\r\n    maxWidth: 45,\r\n  },\r\n  logoText: {\r\n    maxHeight: 43,\r\n    maxWidth: 95,\r\n    minHeight: 32,\r\n    minWidth: 71,\r\n    paddingTop: 5,\r\n  },\r\n  linkButton: {\r\n    textTransform: \"none\",\r\n    fontFamily: \"'Sen', sans-serif\",\r\n  },\r\n  chips: {\r\n    maxWidth: \"125rem\",\r\n    maxHeight: \"400rem\",\r\n    minWidth: \"10rem\",\r\n    minHeight: \"32rem\",\r\n  },\r\n  buttonChips: {\r\n    textTransform: \"none\",\r\n    borderRadius: 60,\r\n    height: 160,\r\n  },\r\n}));\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport const ToolbarAndChips = () => {\r\n  const auth = firebase.auth();\r\n  const classes = useStyles();\r\n  //this will be called later.\r\n\r\n  //code to deal with opening links \"dropdown\"\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n  //end dropdown code\r\n\r\n  //signout function\r\n  function signOut() {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        refreshPage();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error logging in\", error);\r\n      });\r\n  }\r\n\r\n  //refreshes page after logging out so user cannot access stuff after logging out\r\n  function refreshPage() {\r\n    window.location.reload();\r\n  }\r\n\r\n  //to be implented later: chips with event types\r\n\r\n  // const [flag1, setFlag1] = React.useState(true);\r\n  // const [flag2, setFlag2] = React.useState(true);\r\n  // const [flag3, setFlag3] = React.useState(true);\r\n  // const handleClickCampus = () => {\r\n  //   setFlag1(!flag1);\r\n  // };\r\n  // const handleClickStudy = () => {\r\n  //   setFlag2(!flag2);\r\n  // };\r\n  // const handleClickParty = () => {\r\n  //   setFlag3(!flag3);\r\n  // };\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#EE6C4D\",\r\n        light: \"#ff9b79\",\r\n        dark: \"#b53a22\",\r\n      },\r\n      secondary: {\r\n        main: \"#4C5760\",\r\n        light: \"#78848d\",\r\n        dark: \"#242e36\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"sticky\"\r\n      elevation={0}\r\n      style={{ margin: 0, width: \"100%\" }}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              spacing={0}\r\n              direction=\"row\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              <IconButton className={classes.logoButton} onClick={refreshPage}>\r\n                <Avatar className={classes.appicon} src={logo} />\r\n              </IconButton>\r\n              <img src={logoText} className={classes.logoText} alt=\"logoText\" />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n              {(popupState) => (\r\n                <div>\r\n                  <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"menu-appbar\"\r\n                    {...bindTrigger(popupState)}\r\n                  >\r\n                    <AccountCircle\r\n                      className={classes.accountIcon}\r\n                    ></AccountCircle>\r\n                  </IconButton>\r\n\r\n                  <Popover\r\n                    {...bindPopover(popupState)}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"left\",\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"right\",\r\n                    }}\r\n                    style={{ borderRadius: \"5rem\" }}\r\n                  >\r\n                    <Box p={1} style={{ borderRadius: \"1.5rem\" }}>\r\n                      <Typography style={{ borderRadius: \"1.5rem\" }}>\r\n                        <ThemeProvider theme={theme}>\r\n                          {/* Here comes the first name extracted from the email */}\r\n                          <InfoSubtitle>\r\n                            <SignedInUserEmail></SignedInUserEmail>\r\n                          </InfoSubtitle>\r\n                          <Box\r\n                            m={6}\r\n                            style={{ borderRadius: \"1.5rem\" }}\r\n                            pt={1}\r\n                          ></Box>\r\n                          <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                          >\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              onClick={signOut}\r\n                              className={classes.button}\r\n                              startIcon={<MeetingRoomRoundedIcon />}\r\n                            >\r\n                              Logout\r\n                            </Button>\r\n                          </Grid>\r\n                          <Box m={1} pt={0}></Box>\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                          >\r\n                            <Grid item>\r\n                              <Button\r\n                                id=\"basic-button\"\r\n                                aria-controls=\"basic-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded={open ? \"true\" : undefined}\r\n                                onClick={handleClick}\r\n                                className={classes.linkButton}\r\n                              >\r\n                                Feedback\r\n                              </Button>\r\n\r\n                              <Menu\r\n                                id=\"basic-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                MenuListProps={{\r\n                                  \"aria-labelledby\": \"basic-button\",\r\n                                }}\r\n                              >\r\n                                <Link\r\n                                  href=\"mailto:suggestions@kaglet.app\"\r\n                                  color=\"#555555\"\r\n                                  underline=\"none\"\r\n                                >\r\n                                  <MenuItem>\r\n                                    <Box m={0.5} pt={1}>\r\n                                      <BugReportRounded fontSize=\"small\" />\r\n                                    </Box>\r\n                                    Bugs or Suggestions?\r\n                                  </MenuItem>\r\n                                </Link>\r\n                                <Link\r\n                                  href=\"mailto:help@kaglet.app\"\r\n                                  color=\"#555555\"\r\n                                  underline=\"none\"\r\n                                >\r\n                                  <MenuItem>\r\n                                    <Box m={0.5} pt={1}>\r\n                                      <HelpOutlineRounded fontSize=\"small\" />\r\n                                    </Box>\r\n                                    Need help?\r\n                                  </MenuItem>\r\n                                </Link>\r\n\r\n                                <Link\r\n                                  href=\"https://discord.link/KzooKaglet\"\r\n                                  color=\"#555555\"\r\n                                  underline=\"none\"\r\n                                >\r\n                                  <MenuItem>\r\n                                    <Box m={0.5} pt={1}>\r\n                                      <Icon icon=\"akar-icons:discord-fill\" />\r\n                                    </Box>\r\n                                    Join Our Discord!\r\n                                  </MenuItem>\r\n                                </Link>\r\n                              </Menu>\r\n                            </Grid>\r\n                            {/* <Grid item>&ensp;&middot;&ensp;</Grid>\r\n                            <Grid item>\r\n                              <Link\r\n                                href=\"https://usaidbinshafqat.com/\"\r\n                                color=\"#555555\"\r\n                              >\r\n                                About Us\r\n                              </Link>\r\n                            </Grid> */}\r\n                          </Grid>\r\n                        </ThemeProvider>\r\n                      </Typography>\r\n                    </Box>\r\n                  </Popover>\r\n                </div>\r\n              )}\r\n            </PopupState>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/partyImage1.59010835.png\";","export default __webpack_public_path__ + \"static/media/campusImage1.c1c2f219.png\";","export default __webpack_public_path__ + \"static/media/studyImage1.b669a69c.png\";","export default __webpack_public_path__ + \"static/media/studyImage2.54d40e84.png\";","export default __webpack_public_path__ + \"static/media/studyImage3.65de07e1.png\";","export default __webpack_public_path__ + \"static/media/campusImage2.91f3a786.png\";","export default __webpack_public_path__ + \"static/media/campusImage3.b8d12bb7.png\";","export default __webpack_public_path__ + \"static/media/partyImage2.9159f47b.png\";","export default __webpack_public_path__ + \"static/media/partyImage3.9874ef6e.png\";","export default __webpack_public_path__ + \"static/media/1.9a420cb2.png\";","export default __webpack_public_path__ + \"static/media/2.9eef7d99.png\";","export default __webpack_public_path__ + \"static/media/3.afa1c7de.png\";","export default __webpack_public_path__ + \"static/media/4.50a0415d.png\";","export default __webpack_public_path__ + \"static/media/5.89672f93.png\";","import { Typography } from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport React from \"react\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport AvatarGroup from \"@mui/material/AvatarGroup\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport avatar1 from \"../avatars/1.png\";\r\nimport avatar2 from \"../avatars/2.png\";\r\nimport avatar3 from \"../avatars/3.png\";\r\nimport avatar4 from \"../avatars/4.png\";\r\nimport avatar5 from \"../avatars/5.png\";\r\nimport { Info, InfoSubtitle, InfoTitle } from \"@mui-treasury/components/info\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    alignContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    justify: \"center\",\r\n    borderRadius: 20,\r\n    textTransform: \"none\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"'Sen', sans-serif\",\r\n  },\r\n  rsvpCount: {\r\n    paddingBottom: 7,\r\n    paddingLeft: 10,\r\n  },\r\n  attending: {\r\n    paddingLeft: 6,\r\n    fontFamily: \"'Nunito', 'sans-serif'\",\r\n    textAlign: \"left\",\r\n    fontSize: \"1.3rem\",\r\n  },\r\n}));\r\n\r\n// const theme = createTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       main: \"#EE6C4D\",\r\n//       light: \"#ff9b79\",\r\n//       dark: \"#b53a22\",\r\n//     },\r\n//     secondary: {\r\n//       main: \"#4C5760\",\r\n//       light: \"#78848d\",\r\n//       dark: \"#242e36\",\r\n//     },\r\n//   },\r\n// });\r\n\r\nexport interface RsvpDetails {\r\n  eventID?: string;\r\n  rsvpList?: any;\r\n}\r\n\r\nconst database = firebase.database();\r\n\r\nlet check = false;\r\n\r\nfunction UIDarray(eventID?: string, rsvpList?: any) {\r\n  const auth = firebase.auth();\r\n  const user = auth.currentUser;\r\n\r\n  if (user) {\r\n    if (!rsvpList.includes(user.email)) {\r\n      rsvpList.push(user.email);\r\n      PushFirebase(rsvpList, eventID);\r\n    } else {\r\n      //setCheck(true);\r\n      check = true;\r\n      // snackbar shows up saying you're already going\r\n      // to the event, add to calendar here\r\n    }\r\n  }\r\n}\r\n\r\nfunction PushFirebase(rsvpList?: any, eventID?: string) {\r\n  database.ref(\"events/\" + eventID + \"/\").update({\r\n    rsvpList: rsvpList,\r\n  });\r\n}\r\n\r\nfunction randomGeneratortexts() {\r\n  const min = 0;\r\n  const max = 10;\r\n  const random = min + Math.random() * (max - min);\r\n\r\n  return random;\r\n}\r\n\r\nfunction chooseText() {\r\n  let text = \"\";\r\n  let random = Math.round(randomGeneratortexts());\r\n  if (random === 0) {\r\n    text = \"I'll attend 😁\";\r\n  } else if (random === 1) {\r\n    text = \"I'm coming 😉\";\r\n  } else if (random === 2) {\r\n    text = \"I will be coming 😁\";\r\n  } else if (random === 3) {\r\n    text = \"I'm down 🥳\";\r\n  } else if (random === 4) {\r\n    text = \"Sign me up 😋\";\r\n  } else if (random === 5) {\r\n    text = \"I'm up for it 😁\";\r\n  } else if (random === 6) {\r\n    text = \"RSVP 👔\";\r\n  } else if (random === 7) {\r\n    text = \"I'll be there 😏\";\r\n  } else if (random === 8) {\r\n    text = \"I'll drop in 😎\";\r\n  } else if (random === 9) {\r\n    text = \"I'll join 🙃\";\r\n  } else if (random === 10) {\r\n    text = \"I'll pop by 🐣\";\r\n  }\r\n\r\n  console.log(text);\r\n  return text;\r\n}\r\n\r\nfunction randomAvatarPicker() {\r\n  const min = 0;\r\n  const max = 7;\r\n  const random = Math.round(randomGenerator());\r\n  let imageName = \"\";\r\n\r\n  if (random === 0) {\r\n    imageName = avatar1;\r\n  } else if (random === 1) {\r\n    imageName = avatar2;\r\n  } else if (random === 2) {\r\n    imageName = avatar3;\r\n  } else if (random === 3) {\r\n    imageName = avatar4;\r\n  } else {\r\n    imageName = avatar5;\r\n  }\r\n  return imageName;\r\n}\r\n\r\nfunction randomGenerator() {\r\n  const min = 0;\r\n  const max = 4;\r\n  const random = min + Math.random() * (max - min);\r\n\r\n  return random;\r\n}\r\n\r\nexport const PlusOneButton: React.FC<RsvpDetails> = (props: RsvpDetails) => {\r\n  const classes = useStyles();\r\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\r\n  const [openSuccess, setOpenSuccess] = React.useState(false);\r\n  const [openError, setOpenError] = React.useState(false);\r\n\r\n  const handleClickSuccess = () => {\r\n    setOpenSuccess(true);\r\n  };\r\n\r\n  const handleCloseSuccess = (\r\n    event?: React.SyntheticEvent,\r\n    reason?: string\r\n  ) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSuccess(false);\r\n  };\r\n\r\n  const handleClickError = () => {\r\n    setOpenError(true);\r\n  };\r\n\r\n  const handleCloseError = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenError(false);\r\n  };\r\n\r\n  // const theme = createTheme({\r\n  //   palette: {\r\n  //     primary: {\r\n  //       main: \"#EE6C4D\",\r\n  //       light: \"#ff9b79\",\r\n  //       dark: \"#b53a22\",\r\n  //     },\r\n  //     secondary: {\r\n  //       main: \"#4C5760\",\r\n  //       light: \"#78848d\",\r\n  //       dark: \"#242e36\",\r\n  //     },\r\n  //   },\r\n  // });\r\n\r\n  function handleDisable() {\r\n    setSubmitDisabled(true);\r\n  }\r\n\r\n  function validity() {\r\n    UIDarray(props.eventID, props.rsvpList);\r\n    if (check === false) {\r\n      handleClickSuccess();\r\n      handleDisable();\r\n      incrementCount();\r\n    } else {\r\n      handleClickError();\r\n      handleDisable();\r\n    }\r\n  }\r\n\r\n  function incrementCount() {\r\n    setCount(count + 1);\r\n  }\r\n\r\n  const renderButtons = (\r\n    <Button\r\n      disabled={submitDisabled}\r\n      size=\"large\"\r\n      color=\"primary\"\r\n      variant=\"outlined\"\r\n      className={classes.button}\r\n      onClick={() => {\r\n        validity();\r\n      }}\r\n    >\r\n      {chooseText()}\r\n    </Button>\r\n  );\r\n\r\n  const [count, setCount] = React.useState(props.rsvpList.length);\r\n  const AvatarList = () => (\r\n    <div>\r\n      <Avatar src={randomAvatarPicker()} />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item>{renderButtons}</Grid>\r\n\r\n        <Grid item style={{ paddingTop: 10 }}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <AvatarGroup\r\n                max={3}\r\n                spacing={\"medium\"}\r\n                style={{ justifyContent: \"left\", display: \"flex\" }}\r\n              >\r\n                {[...Array(count)].map((value: undefined, index: number) => (\r\n                  <AvatarList />\r\n                ))}\r\n              </AvatarGroup>\r\n            </Grid>\r\n            <Grid item className={classes.attending}>\r\n              <InfoSubtitle>attending</InfoSubtitle>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Typography component=\"div\" align=\"center\">\r\n        <div>\r\n          <Snackbar\r\n            autoHideDuration={2000}\r\n            open={openSuccess}\r\n            onClose={handleCloseSuccess}\r\n          >\r\n            <Alert onClose={handleCloseSuccess} severity=\"success\">\r\n              You're on the list! 👍\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          <Snackbar\r\n            autoHideDuration={2000}\r\n            open={openError}\r\n            onClose={handleCloseError}\r\n          >\r\n            <Alert onClose={handleCloseError} severity=\"error\">\r\n              You're already on the list! 😁\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  NoSsr,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n// import { createTheme } from \"@material-ui/core/styles\";\r\nimport partyImage1 from \"../logos/partyImage1.png\";\r\nimport campusImage1 from \"../logos/campusImage1.png\";\r\nimport studyImage1 from \"../logos/studyImage1.png\";\r\nimport studyImage2 from \"../logos/studyImage2.png\";\r\nimport studyImage3 from \"../logos/studyImage3.png\";\r\nimport campusImage2 from \"../logos/campusImage2.png\";\r\nimport campusImage3 from \"../logos/campusImage3.png\";\r\nimport partyImage2 from \"../logos/partyImage2.png\";\r\nimport partyImage3 from \"../logos/partyImage3.png\";\r\n// import LocalBarIcon from \"@material-ui/icons/LocalBar\";\r\n// import SchoolRoundedIcon from \"@material-ui/icons/SchoolRounded\";\r\n// import BackpackRoundedIcon from \"@material-ui/icons/BackpackRounded\";\r\nimport { Row } from \"@mui-treasury/components/flex\";\r\nimport { PlusOneButton } from \"./PlusOneButton\";\r\nimport { Info, InfoSubtitle, InfoTitle } from \"@mui-treasury/components/info\";\r\nimport { useNewsInfoStyles } from \"@mui-treasury/styles/info/news\";\r\nimport GoogleFontLoader from \"react-google-font-loader\";\r\nimport { IconButton, IconButtonProps } from \"@mui/material\";\r\nimport { createTheme, styled } from \"@mui/material/styles\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\n\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport EmailTwoToneIcon from \"@mui/icons-material/EmailTwoTone\";\r\nimport CalendarTodayTwoToneIcon from \"@mui/icons-material/CalendarTodayTwoTone\";\r\nimport AddToCalendar from \"react-add-to-calendar\";\r\nimport { google, outlook, office365, yahoo, ics } from \"calendar-link\";\r\nimport moment from \"moment\";\r\nimport MessageTwoToneIcon from \"@mui/icons-material/MessageTwoTone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardcomponent: {\r\n    minWidth: 300,\r\n    position: \"relative\",\r\n    boxShadow: \"0 8px 24px 0 rgba(0,0,0,0.12)\",\r\n    overflow: \"visible\",\r\n    borderRadius: \"1.5rem\",\r\n    transition: \"0.4s\",\r\n    \"&:hover\": {\r\n      transform: \"translateY(-10px)\",\r\n      \"& $shadow\": {\r\n        bottom: \"-1.5rem\",\r\n      },\r\n      \"& $shadow2\": {\r\n        bottom: \"-2.5rem\",\r\n      },\r\n    },\r\n    \"&:before\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      zIndex: 0,\r\n      display: \"block\",\r\n      width: \"100%\",\r\n      bottom: -1,\r\n      height: \"100%\",\r\n      borderRadius: \"1.5rem\",\r\n      backgroundColor: \"rgba(0,0,0,0)\",\r\n    },\r\n  },\r\n  username: {\r\n    textAlign: \"left\",\r\n  },\r\n  leftAlignText: {\r\n    textAlign: \"left\",\r\n    justifyContent: \"center\",\r\n    paddingLeft: 10,\r\n  },\r\n  cardLooks: {\r\n    borderRadius: 12,\r\n  },\r\n  cardTitle: {\r\n    //fontSize: 20,\r\n    paddingLeft: 10,\r\n  },\r\n  cardSubtitle: {\r\n    //fontSize: 17,\r\n    paddingLeft: 5,\r\n  },\r\n  media: {\r\n    minHeight: 220,\r\n  },\r\n  titleIcon: {\r\n    paddingTop: 7,\r\n  },\r\n  locationSubtitle: {\r\n    paddingLeft: 10,\r\n  },\r\n  join: {\r\n    background: \"linear-gradient(to top, #638ef0, #82e7fe)\",\r\n    \"& > *\": {\r\n      textTransform: \"none !important\",\r\n    },\r\n  },\r\n  main: {\r\n    textAlign: \"left\",\r\n    justifyContent: \"center\",\r\n    paddingLeft: \"10\",\r\n    overflow: \"hidden\",\r\n    borderTopLeftRadius: \"1.5rem\",\r\n    borderTopRightRadius: \"1.5rem\",\r\n    \"&:after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      bottom: 0,\r\n      display: \"block\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      background: \"linear-gradient(to top, #543b31, rgba(0,0,0,0))\",\r\n    },\r\n  },\r\n  content: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    zIndex: 1,\r\n    padding: \"1.5rem 1.5rem 1rem\",\r\n  },\r\n  tag: {\r\n    display: \"inline-block\",\r\n    fontFamily: \"'Sen', sans-serif\",\r\n    backgroundColor: \"#ff5dac\",\r\n    borderRadius: \"0.5rem\",\r\n    padding: \"2px 0.5rem\",\r\n    color: \"#fff\",\r\n    marginBottom: \"0.5rem\",\r\n  },\r\n  title: {\r\n    fontFamily: \"'Nunito', 'sans-serif'\",\r\n    fontSize: \"1.3rem\",\r\n    fontWeight: 800,\r\n    color: \"#fff\",\r\n  },\r\n  author: {\r\n    textAlign: \"left\",\r\n    position: \"relative\",\r\n    borderBottomLeftRadius: \"1.5rem\",\r\n    borderBottomRightRadius: \"1.5rem\",\r\n  },\r\n\r\n  avatar: {\r\n    width: 48,\r\n    height: 48,\r\n  },\r\n  timeText: {\r\n    paddingLeft: 6,\r\n    fontFamily: \"'Nunito', 'sans-serif'\",\r\n    textAlign: \"left\",\r\n    fontSize: \"1.3rem\",\r\n  },\r\n  divDeets: {\r\n    width: \"90%\",\r\n  },\r\n  textIcon: {\r\n    color: \"#EE6C4D\",\r\n  },\r\n}));\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#EE6C4D\",\r\n      light: \"#ff9b79\",\r\n      dark: \"#b53a22\",\r\n    },\r\n    secondary: {\r\n      main: \"#4C5760\",\r\n      light: \"#78848d\",\r\n      dark: \"#242e36\",\r\n    },\r\n  },\r\n});\r\nexport interface EventDetails {\r\n  name: string;\r\n  type?: string;\r\n  location?: string;\r\n  time?: string;\r\n  email?: string;\r\n  rsvpList?: any;\r\n  eventID?: string;\r\n}\r\n\r\nfunction randomGenerator() {\r\n  const min = 0;\r\n  const max = 2;\r\n  const random = min + Math.random() * (max - min);\r\n\r\n  return random;\r\n}\r\n\r\nfunction chooseImage(type?: string) {\r\n  let imageName = \"\";\r\n  let random = Math.round(randomGenerator());\r\n  if (type === \"Study Sesh\") {\r\n    if (random === 0) {\r\n      imageName = studyImage1;\r\n    } else if (random === 1) {\r\n      imageName = studyImage2;\r\n    } else {\r\n      imageName = studyImage3;\r\n    }\r\n  }\r\n  if (type === \"House Party\") {\r\n    if (random === 0) {\r\n      imageName = partyImage1;\r\n    } else if (random === 1) {\r\n      imageName = partyImage2;\r\n    } else {\r\n      imageName = partyImage3;\r\n    }\r\n  }\r\n  if (type === \"Campus Event\") {\r\n    if (random === 0) {\r\n      imageName = campusImage1;\r\n    } else if (random === 1) {\r\n      imageName = campusImage2;\r\n    } else {\r\n      imageName = campusImage3;\r\n    }\r\n  }\r\n  console.log(imageName);\r\n  return imageName;\r\n}\r\n\r\n// function chooseIcon(type?: string) {\r\n//   let typeIcon: any = \"\";\r\n//   if (type === \"Study Sesh\") {\r\n//     typeIcon = <BackpackRoundedIcon />;\r\n//   }\r\n//   if (type === \"House Party\") {\r\n//     typeIcon = <LocalBarIcon />;\r\n//   }\r\n//   if (type === \"Campus Event\") {\r\n//     typeIcon = <SchoolRoundedIcon />;\r\n//   }\r\n//   return typeIcon;\r\n// }\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport const NewCardUI: React.FC<EventDetails> = (props: EventDetails) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const openInNewTab = () => {\r\n    const mainUrl = \"https://teams.microsoft.com/l/chat/0/0?users=\";\r\n    let emailUrl: any = props.email;\r\n    //let emailUrl2:string = 'usaidbin.shafqat19@kzoo.edu'\r\n    let fullUrl: string = mainUrl.concat(emailUrl);\r\n    const newWindow = window.open(fullUrl, \"_blank\", \"noopener,noreferrer\");\r\n    if (newWindow) newWindow.opener = null;\r\n  };\r\n  const timeExtract = () => {\r\n    let timeofEvent:any = props.time;\r\n    timeofEvent.toString();\r\n    let Time:any = ''\r\n    let marker:boolean = false\r\n    for (let i = 0; i < timeofEvent.length; i++) {\r\n      if(marker == true){Time = Time + (timeofEvent[i]);}\r\n      if(timeofEvent[i] == ','){marker = true}\r\n    }\r\n    return (Time)\r\n  }\r\n  const { google, outlook, office365, yahoo, ics } = require(\"calendar-link\");\r\n  const addToCalendar = () => {\r\n    const eventCal = {\r\n      title: props.name,\r\n      //description: props.description,\r\n      location: props.location,\r\n      start: props.time,\r\n      //start: moment(props.time).format(),\r\n      duration: [1, \"hour\"],\r\n    };\r\n    const newWindow = window.open(google(eventCal), \"_blank\", \"noopener,noreferrer\");\r\n    if (newWindow) newWindow.opener = null;\r\n    console.log((google(eventCal)))\r\n    console.log(props.time)\r\n    console.log(moment(props.time).format())\r\n    \r\n  };\r\n\r\n  const nameExtract = () => {\r\n    let nameOfPerson:any = props.email;\r\n    nameOfPerson.toString();\r\n    let Name:any = ''\r\n    let fName:any = ''\r\n    let lName:any = ''\r\n    let point:any = 0;\r\n\r\n    for (let i = 0; i < nameOfPerson.length; i++) {\r\n      if(nameOfPerson[i] == '.'){break}\r\n      fName = fName + (nameOfPerson[i]);\r\n      point++;\r\n    }\r\n    fName = fName[0].toUpperCase() + fName.substring(1)\r\n    Name = fName + (' ')\r\n    for (let i = (point+1); i < nameOfPerson.length; i++) {\r\n      if(nameOfPerson[i] == '@'){break}\r\n      if (Number(nameOfPerson[i]) == 1){break}\r\n      if (Number(nameOfPerson[i]) == 2){break}\r\n      lName = lName + (nameOfPerson[i]);\r\n    }\r\n    lName = lName.charAt(0).toUpperCase() + lName.substring(1)\r\n    Name = Name + lName\r\n    return (fName);\r\n  }\r\n\r\n  return (\r\n    // holding the cards in this div, using useStyles from up top\r\n    <div className={classes.divDeets}>\r\n      <NoSsr>\r\n        <GoogleFontLoader fonts={[{ font: \"Nunito\", weights: [400, 800] }]} />\r\n      </NoSsr>\r\n      <Card className={classes.cardcomponent}>\r\n        <Box className={classes.main} minHeight={220} position={\"relative\"}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={chooseImage(props.type)}\r\n          />\r\n          <div className={classes.content}>\r\n            <div className={classes.tag}>{props.time}</div>\r\n            <Typography className={classes.title}>\r\n              {props.name} @ {props.location}\r\n            </Typography>\r\n          </div>\r\n        </Box>\r\n        <Row\r\n          className={classes.author}\r\n          m={0}\r\n          p={1}\r\n          pt={2}\r\n          gap={2}\r\n          bgcolor={\"common.white\"}\r\n        >\r\n          <Info position={\"left\"} useStyles={useNewsInfoStyles}>\r\n            <InfoTitle className={classes.timeText}>\r\n              <PlusOneButton\r\n                eventID={props.eventID}\r\n                rsvpList={props.rsvpList}\r\n              />\r\n            </InfoTitle>\r\n          </Info>\r\n          <Info position={\"right\"} useStyles={useNewsInfoStyles}>\r\n            <ExpandMore\r\n              expand={expanded}\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </ExpandMore>\r\n          </Info>\r\n        </Row>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent style={{ textAlign: \"left\" }}>\r\n            <Row\r\n              className={classes.author}\r\n              m={0}\r\n              p={1}\r\n              pt={2}\r\n              gap={2}\r\n              bgcolor={\"common.white\"}\r\n            >\r\n              <Info position={\"left\"} useStyles={useNewsInfoStyles}>\r\n                <InfoSubtitle style={{ paddingTop: 10, paddingLeft: 3 }}>\r\n                  {/* {props.type} created by {props.email} */}\r\n                  {props.type} created by {nameExtract()}\r\n                </InfoSubtitle>\r\n              </Info>\r\n\r\n              <Info position={\"right\"} useStyles={useNewsInfoStyles}>\r\n                <IconButton\r\n                  size=\"small\"\r\n                  className={classes.textIcon}\r\n                  onClick={() => openInNewTab()}\r\n                >\r\n                  <MessageTwoToneIcon className={classes.textIcon} />\r\n                </IconButton>\r\n                {/* <IconButton size=\"small\"\r\n                color=\"primary\"\r\n                onClick = {\r\n                  () => addToCalendar()\r\n                }>\r\n                <CalendarTodayTwoToneIcon />\r\n              </IconButton> */}\r\n              </Info>\r\n            </Row>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n      &nbsp;\r\n    </div>\r\n  );\r\n};\r\n","import firebase from \"firebase\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { NewCardUI } from \"./NewCardUI\";\r\n\r\nexport const GetEventCards = () => {};\r\n\r\nexport const EventCardContainer = () => {\r\n  const [eventsList, setEventsList] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      /** Backup method: REST API */\r\n      //   const result = await axios(\r\n      //     \"https://kaglet-91224-default-rtdb.firebaseio.com/events.json\"\r\n      //   );\r\n      // console.log(Object.values(result.data));\r\n      // setEventsList(Object.values(result.data));\r\n\r\n      var dateToday = new Date();\r\n\r\n      dateToday.setHours(dateToday.getHours() - 2);\r\n\r\n      var timeTwoHoursAgoMS = dateToday.getTime();\r\n\r\n      let allEvents = firebase\r\n        .database()\r\n        .ref(\"events\")\r\n        .startAfter(timeTwoHoursAgoMS)\r\n        .orderByChild(\"eventTime\");\r\n\r\n      allEvents.once(\"value\").then((snapshot) => {\r\n        // console.log(snapshot.val());\r\n        // setEventsList(Object.values(snapshot.val()));\r\n        var fetchedEvents = [] as any;\r\n        snapshot.forEach(function (child) {\r\n          fetchedEvents.push(child.val());\r\n        });\r\n        setEventsList(fetchedEvents);\r\n      });\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  function timeConverter(timeFromFirebase: string) {\r\n    let dateString = timeFromFirebase;\r\n    let stringToDate = new Date(dateString);\r\n    return moment(stringToDate).format(\"MMMM Do, h:mm a\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {Object.values(eventsList).map((event: any) => (\r\n        <NewCardUI\r\n          name={event.eventName}\r\n          time={timeConverter(event.eventTime)}\r\n          location={event.eventLocation}\r\n          type={event.eventType}\r\n          email={event.hostEmail}\r\n          rsvpList={event.rsvpList}\r\n          eventID={event.id}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { PostButton } from \"./PostButton\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { ToolbarAndChips } from \"./ToolbarAndChips\";\r\nimport { EventCardContainer } from \"./EventCardContainer\";\r\nimport firebase from \"firebase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GoogleFontLoader from \"react-google-font-loader\";\r\nimport { NoSsr } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 0,\r\n  },\r\n  title: {\r\n    fontFamily: \"'Nunito', 'sans-serif'\",\r\n    fontSize: \"1.8rem\",\r\n    padding: \"2px 0.5rem\",\r\n    margin: 3,\r\n  },\r\n  subtitle: {\r\n    display: \"inline-block\",\r\n    fontFamily: \"'Sen', sans-serif\",\r\n    fontSize: \"1.3rem\",\r\n    padding: \"2px 0.5rem\",\r\n    margin: 3,\r\n  },\r\n}));\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#EE6C4D\",\r\n      light: \"#ff9b79\",\r\n      dark: \"#b53a22\",\r\n    },\r\n    secondary: {\r\n      main: \"#4C5760\",\r\n      light: \"#78848d\",\r\n      dark: \"#242e36\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction LoggedOutUI() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <NoSsr>\r\n        <GoogleFontLoader fonts={[{ font: \"Nunito\", weights: [400, 800] }]} />\r\n      </NoSsr>\r\n      <Grid container direction=\"column\" justifyContent=\"center\">\r\n        <Typography\r\n          component=\"div\"\r\n          align=\"center\"\r\n          ///still figuring out\r\n          style={{ height: \"100vh\" }}\r\n        >\r\n          {/* Toolbar component being imported from the other screen */}\r\n          <ToolbarAndChips />\r\n          &nbsp;\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <Typography className={classes.title}>\r\n              Please log in to view awesome K events!\r\n            </Typography>\r\n            &nbsp;\r\n            <Typography className={classes.subtitle}>\r\n              If you've logged in, try again in a non-private window.\r\n            </Typography>\r\n            &nbsp;\r\n            <ThemeProvider theme={theme}>\r\n              <Grid item>\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  className=\"subheading\"\r\n                  style={{ borderRadius: 20, padding: \"0.25rem 2rem\" }}\r\n                  onClick={() => history.push(\"/login\")}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Grid>\r\n            </ThemeProvider>\r\n          </Grid>\r\n        </Typography>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction LoggedInUI() {\r\n  return (\r\n    <Grid container direction=\"column\" justifyContent=\"center\">\r\n      <Typography component=\"div\" align=\"center\" style={{ height: \"100vh\" }}>\r\n        <ToolbarAndChips />\r\n        &nbsp;\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <EventCardContainer />\r\n        </Grid>\r\n        <Grid item>\r\n          <PostButton />\r\n        </Grid>\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}\r\n//homescreen function which is checking if the user is logged in or not. If user, then set user id etc etc.\r\nexport const HomeScreen = () => {\r\n  const [loggedInUserId, setLoggedInUserId] = useState(\"\");\r\n  useEffect(() => {\r\n    const fetchIsLoggedIn = async () => {\r\n      firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n          setLoggedInUserId(user.uid);\r\n        } else {\r\n          setLoggedInUserId(\"as\");\r\n        }\r\n      });\r\n    };\r\n    fetchIsLoggedIn();\r\n  }, [loggedInUserId]);\r\n  const classes = useStyles();\r\n  //return statement that contains the UI\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* only shows this if the user is logged in (it should contain something in the string if it exists) */}\r\n      {loggedInUserId === \"\" && (\r\n        <LoggedOutUI />\r\n\r\n        //Grid holding all elements in the homescreen UI when logged in\r\n      )}\r\n\r\n      {/* otherwise, if it's not an empty string, it should print this. All tags are self-explantory (from Material UI) */}\r\n      {loggedInUserId !== \"\" && <LoggedInUI />}\r\n    </div>\r\n  );\r\n};\r\n","import { Grid, Typography } from \"@material-ui/core\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  makeStyles,\r\n  createTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport { LoginLogic } from \"./LoginLogic\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexFlow: \"column\",\r\n    display: \"flex\",\r\n    height: \"100vh\",\r\n    width: \"100vh\",\r\n  },\r\n  button: {\r\n    alignContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    justify: \"center\",\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n    borderRadius: 20,\r\n    padding: \"0.25rem 2rem\",\r\n  },\r\n  logo: {\r\n    height: 300,\r\n    width: 300,\r\n    alignContent: \"center\",\r\n    justify: \"center\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  toolbar: {\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(0),\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  form: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n\r\n  textfield: {\r\n    width: 300,\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#EE6C4D\",\r\n      light: \"#ff9b79\",\r\n      dark: \"#b53a22\",\r\n    },\r\n    secondary: {\r\n      main: \"#4C5760\",\r\n      light: \"#78848d\",\r\n      dark: \"#242e36\",\r\n    },\r\n  },\r\n});\r\n\r\nconst LoginButtonFunctions = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      size=\"large\"\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n    >\r\n      Get Login Link\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst LoginUIMobile = () => {\r\n  // image in back, login button on top\r\n  return (\r\n    <div style={{ height: \"70vh\", padding: 0, margin: 0 }}>\r\n      <Box\r\n        display=\"flex\"\r\n        flex=\"1\"\r\n        justifyContent=\"space-around\"\r\n        style={{ height: \"90vh\" }}\r\n      >\r\n        <Grid container justifyContent=\"center\" direction=\"column\">\r\n          <LoginLogic />\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoginUIBigScreen = () => {\r\n  return (\r\n    <div style={{ height: \"70vh\", margin: 0, padding: 0 }}>\r\n      <Box\r\n        display=\"flex\"\r\n        flex=\"1\"\r\n        justifyContent=\"space-around\"\r\n        style={{ height: \"70vh\" }}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <LoginLogic />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NewLoginUI = () => {\r\n  console.log(isMobile);\r\n\r\n  function isMobile() {\r\n    if (window.screen.width < 600) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  return (\r\n    //if mobile\r\n    <>\r\n      <div>{isMobile() && <LoginUIMobile />}</div>\r\n\r\n      <div>{!isMobile() && <LoginUIBigScreen />}</div>\r\n      {/* <div> */}\r\n      {/* <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <LoginButtonFunctions />\r\n          <Grid item></Grid>\r\n        </Grid>\r\n      </div> */}\r\n    </>\r\n\r\n    //if not logged in\r\n  );\r\n};\r\n","import firebase from \"firebase\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { NewLoginUI } from \"./NewLoginUI\";\r\n\r\nexport const NewSplashScreen = () => {\r\n  //if the user is logged in, it redirects to the home page\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      redirectToHomepage();\r\n    }\r\n  });\r\n\r\n  function redirectToHomepage() {\r\n    window.location.href = \"https://kaglet.app/home\";\r\n  }\r\n  // only dealing with sending to other screens\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <NewLoginUI />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { LoginLogic } from \"./components/LoginLogic\";\r\n// import { SplashScreen } from \"./components/SplashScreen\";\r\nimport { HomeScreen } from \"./components/HomeScreen\";\r\nimport { NewSplashScreen } from \"./components/NewSplashScreen\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#EE6C4D\",\r\n      light: \"#ff9b79\",\r\n      dark: \"#b53a22\",\r\n    },\r\n    secondary: {\r\n      main: \"#4C5760\",\r\n      light: \"#78848d\",\r\n      dark: \"#242e36\",\r\n    },\r\n  },\r\n  // typography: {\r\n  //   fontFamily: [\"Nunito\", \"Roboto\"].join(\",\"),\r\n  // },\r\n});\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <NewSplashScreen />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <LoginLogic />{\" \"}\r\n          </Route>\r\n          <Route exact path=\"/home\">\r\n            <HomeScreen />{\" \"}\r\n          </Route>\r\n          <Route exact path=\"/splashscreen\">\r\n            <NewSplashScreen />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}