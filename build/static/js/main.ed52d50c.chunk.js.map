{"version":3,"sources":["logos/logo.png","firebaseSetup.ts","components/LoginLogic.tsx","components/PostButton.tsx","logos/justLogo.png","logos/HomeHeader.png","components/signedInUserEmail.tsx","components/ToolbarAndChips.tsx","logos/partyImage1.png","logos/campusImage1.png","logos/studyImage1.png","logos/studyImage2.png","logos/studyImage3.png","logos/campusImage2.png","logos/campusImage3.png","logos/partyImage2.png","logos/partyImage3.png","avatars/1.png","avatars/2.png","avatars/3.png","avatars/4.png","avatars/5.png","components/PlusOneButton.tsx","components/NewCardUI.tsx","components/EventCardContainer.tsx","components/HomeScreen.tsx","components/NewLoginUI.tsx","components/NewSplashScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","useStyles","makeStyles","theme","root","flexGrow","button","alignContent","alignItems","justify","marginTop","spacing","marginBottom","borderRadius","padding","logo","height","width","toolbar","paddingTop","paddingBottom","backgroundColor","form","margin","textfield","backdrop","zIndex","drawer","color","LoginLogic","createTheme","palette","primary","main","light","dark","secondary","classes","useHistory","React","useState","open","vertical","horizontal","state","setState","setOpen","setOpen1","submitDisabled","setSubmitDisabled","setEmail","handleClose","validity","emailRef","current","value","includes","signIn","handleToggle","buttons","Button","size","variant","className","disabled","onClick","useRef","actionCodeSettings","url","handleCodeInApp","a","sendSignInLinkToEmail","window","localStorage","setItem","console","error","isSignInWithEmailLink","location","href","email","getItem","prompt","redirectToHomepage","signInWithEmailLink","then","result","removeItem","catch","log","Typography","component","align","style","Grid","container","direction","justifyContent","item","alt","screen","marginLeft","marginRight","maxWidth","src","TextField","id","label","required","placeholder","inputRef","helperText","onChange","event","target","Snackbar","anchorOrigin","onClose","message","Alert","severity","Backdrop","CircularProgress","popoverFab","formControl","minWidth","selectEmpty","dateAndTime","fabicon","top","right","bottom","left","position","locationField","eventBox","PostButton","loggedInUserEmail","setLoggedInUserEmail","useEffect","fetchIsLoggedIn","onAuthStateChanged","user","database","eventName","setEventName","eventLocation","setEventLocation","eventType","setEventType","Date","eventTime","setEventTime","handleDropDownChange","checkValidity","handleEventNameInput","handleKeyPress","handleEventLocationInput","handleEventTime","date","postButton","newPostKey","ref","child","push","key","postData","getTime","hostEmail","rsvpList","updates","update","PushData","reload","popupId","popupState","Fab","bindTrigger","Popover","bindPopover","transformOrigin","Box","p","xs","FormControl","onKeyPress","InputLabel","Select","autoWidth","MenuItem","utils","DateFnsUtils","DateTimePicker","inputVariant","onError","disablePast","InputProps","endAdornment","InputAdornment","IconButton","endIcon","Icon","userEmail","paddingLeft","gridContainerEmailIcon","typography","fontSize","SignedInUserEmail","currentUser","sx","bgcolor","borderColor","alignSelf","textTransform","fontFamily","secondToolobar","accountIcon","minHeight","appicon","maxHeight","paddingBlock","logoButton","logoText","linkButton","chips","buttonChips","ToolbarAndChips","styled","Paper","body2","textAlign","text","anchorEl","setAnchorEl","Boolean","handleClick","currentTarget","signOut","refreshPage","AppBar","elevation","Toolbar","Avatar","m","pt","startIcon","undefined","Menu","MenuListProps","Link","underline","BugReportRounded","HelpOutlineRounded","icon","display","rsvpCount","attending","check","UIDarray","eventID","PushFirebase","chooseText","random","Math","round","randomAvatarPicker","min","max","randomGenerator","avatar1","avatar2","avatar3","avatar4","avatar5","PlusOneButton","props","openSuccess","setOpenSuccess","openError","setOpenError","handleCloseSuccess","reason","handleCloseError","handleDisable","setCount","count","renderButtons","length","AvatarList","AvatarGroup","Array","map","index","autoHideDuration","cardcomponent","boxShadow","overflow","transition","transform","content","username","leftAlignText","cardLooks","cardTitle","cardSubtitle","media","titleIcon","locationSubtitle","join","background","borderTopLeftRadius","borderTopRightRadius","tag","title","fontWeight","author","borderBottomLeftRadius","borderBottomRightRadius","avatar","timeText","divDeets","textIcon","chooseImage","type","imageName","studyImage1","studyImage2","studyImage3","partyImage1","partyImage2","partyImage3","campusImage1","campusImage2","campusImage3","ExpandMore","expand","other","transitions","create","duration","shortest","NewCardUI","expanded","setExpanded","NoSsr","fonts","font","weights","Card","CardMedia","image","time","name","gap","useNewsInfoStyles","Collapse","in","timeout","unmountOnExit","CardContent","emailUrl","fullUrl","concat","newWindow","opener","openInNewTab","EventCardContainer","eventsList","setEventsList","timeConverter","timeFromFirebase","stringToDate","moment","format","fetchData","dateToday","setHours","getHours","timeTwoHoursAgoMS","startAfter","orderByChild","once","snapshot","fetchedEvents","forEach","val","Object","values","subtitle","LoggedOutUI","history","ThemeProvider","LoggedInUI","HomeScreen","loggedInUserId","setLoggedInUserId","uid","LoginUIMobile","flexFlow","flex","LoginUIBigScreen","NewLoginUI","isMobile","NewSplashScreen","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed52d50c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3b8674fa.png\";","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBQRGfJynPI0BznjfK0Gg2fcn0v7IOzke4\",\n    authDomain: \"kaglet-91224.firebaseapp.com\",\n    projectId: \"kaglet-91224\",\n    storageBucket: \"kaglet-91224.appspot.com\",\n    messagingSenderId: \"407470091369\",\n    appId: \"1:407470091369:web:b59563c510fc47655086f8\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\n","import { Grid, IconButton, Toolbar } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../logos/logo.png\";\nimport { Typography, AppBar } from \"@material-ui/core\";\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRef } from \"react\";\nimport { auth } from \"../firebaseSetup\";\nimport React from \"react\";\nimport Snackbar, { SnackbarOrigin } from \"@material-ui/core/Snackbar\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  makeStyles,\n  createTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport Alert from \"@mui/material/Alert\";\n\nimport { width } from \"@mui/system\";\n\n//defining the styles\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n    borderRadius: 20,\n    padding: \"0.25rem 2rem\",\n  },\n  logo: {\n    height: \"15%\",\n    width: \"15%\",\n    alignContent: \"center\",\n    justify: \"center\",\n  },\n  toolbar: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    backgroundColor: \"#ffffff\",\n  },\n  form: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n    },\n  },\n\n  textfield: {\n    width: 300,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport interface State extends SnackbarOrigin {\n  open: boolean;\n}\n\n//creating the primary and secondary theme with our colors\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\n\n//export function that handles everything login, checks for validity, shows error/sucess and email refs etc\nexport const LoginLogic = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [state, setState] = React.useState<State>({\n    open: false,\n    vertical: \"bottom\",\n    horizontal: \"center\",\n  });\n  const { vertical, horizontal } = state;\n  const [open, setOpen] = React.useState(false);\n  const [open1, setOpen1] = React.useState(false);\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\n  const [email1, setEmail] = React.useState(\"\");\n\n  const handleClick = (newState: SnackbarOrigin) => () => {\n    setState({ open: true, ...newState });\n  };\n\n  const handleClickOpen = () => {\n    setOpen1(true);\n  };\n\n  const handleError = () => {\n    setSubmitDisabled(true);\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n    setOpen(false);\n    setOpen1(false);\n  };\n\n  const handleEmailInput = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setEmail(event.target.value as string);\n    checkValidity();\n  };\n\n  function validity() {\n    if (emailRef.current!.value.includes(\"@kzoo.edu\")) {\n      signIn();\n      handleToggle();\n      handleClick({ vertical: \"top\", horizontal: \"center\" });\n    } else {\n      //handleClickOpen();\n      handleError();\n    }\n  }\n\n  function isMobile() {\n    var mobileCompsStyle = {\n      margin: \"auto\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      maxWidth: \"60%\",\n      height: \"auto\",\n      width: \"auto\",\n    };\n\n    var screenCompsStyle = {\n      margin: \"auto\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      maxWidth: \"25%\",\n      height: \"auto\",\n      width: \"auto\",\n    };\n    if (window.screen.width < 600) {\n      return mobileCompsStyle;\n    } else {\n      return screenCompsStyle;\n    }\n  }\n  function checkValidity() {\n    if (emailRef.current!.value !== \"\") {\n      setSubmitDisabled(false);\n    }\n  }\n\n  const buttons = (\n    <Button\n      size=\"large\"\n      variant=\"outlined\"\n      color=\"primary\"\n      className={classes.button}\n      disabled={submitDisabled}\n      onClick={() => {\n        validity();\n      }}\n    >\n      Get Login Link\n    </Button>\n  );\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  //enter key check\n  const handleKeyPress = (event: any) => {\n    event.preventDefault();\n    if (event.which === 13 || event.key === \"Enter\" || event.key === \"Go\") {\n      validity();\n    }\n  };\n\n  // firebaseItems\n  //getting the email data from the text field\n  let emailRef = useRef<HTMLInputElement>(null);\n  var actionCodeSettings = {\n    url: \"https://kaglet.app/login\",\n    handleCodeInApp: true,\n  };\n\n  const signIn = async () => {\n    try {\n      await auth.sendSignInLinkToEmail(\n        emailRef.current!.value,\n        actionCodeSettings\n      );\n      window.localStorage.setItem(\"emailForSignIn\", emailRef.current!.value);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  //firebase login items\n  try {\n    if (auth.isSignInWithEmailLink(window.location.href)) {\n      var email = window.localStorage.getItem(\"emailForSignIn\");\n      if (!email) {\n        email = window.prompt(\"Please provide your email for confirmation\");\n        redirectToHomepage();\n        return <div>Try again in a non-private window.</div>;\n      } else {\n        auth\n          .signInWithEmailLink(email, window.location.href)\n          .then((result) => {\n            window.localStorage.removeItem(\"emailForSignIn\");\n            redirectToHomepage();\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  // //this will be called later.\n  // const signOut = async () => {\n  //   await auth.signOut();\n  // };\n\n  //redirects if the user is already logged in\n  function redirectToHomepage() {\n    window.location.href = \"https://kaglet.app/home\";\n  }\n\n  //firebase-ends\n\n  return (\n    <div className={classes.root}>\n      <Typography component=\"div\" align=\"center\" style={{ height: \"100vh\" }}>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <img alt=\"Logo\" style={isMobile()} src={logo} />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Email\"\n              //helperText=\"Incorrect entry.\"\n              error={submitDisabled}\n              required\n              color=\"secondary\"\n              variant=\"outlined\"\n              placeholder=\"@kzoo.edu\"\n              inputRef={emailRef}\n              className={classes.textfield}\n              helperText=\"Please use your @kzoo.edu school email.\"\n              // onKeyPress={handleKeyPress}\n              onChange={handleEmailInput}\n            />\n          </Grid>\n          <Grid item>{buttons}</Grid>\n        </Grid>\n        <div>\n          <Grid item alignContent=\"center\">\n            <Snackbar\n              //autoHideDuration={100000000}\n              anchorOrigin={{ vertical: \"top\", horizontal }}\n              open={open}\n              onClose={handleClose}\n              message=\"Link successfully sent\"\n              key={vertical + horizontal}\n            >\n              <Alert onClose={handleClose} severity=\"success\">\n                Check your email! 🤪\n              </Alert>\n            </Snackbar>\n            <Backdrop\n              className={classes.backdrop}\n              open={open}\n              onClick={handleClose}\n            >\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          </Grid>\n        </div>\n      </Typography>\n      {/* </Grid> */}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  Typography,\n  InputLabel,\n  MenuItem,\n  Select,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popover from \"@material-ui/core/Popover\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { TextField } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport firebase from \"firebase\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\nimport EventRoundedIcon from \"@material-ui/icons/EventRounded\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\n\n// import { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\nimport Icon from \"@material-ui/core/Icon\";\n//import { useDebugValue } from \"react\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nexport interface EventDetails {\n  name: string;\n  type?: string;\n  location?: string;\n  time?: string;\n  email?: string;\n  submitDisabled?: boolean;\n  textValid?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  popoverFab: {\n    padding: theme.spacing(2),\n    zIndex: 2,\n  },\n  /*\n  formControl: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 270,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  dateAndTime: {\n    marginLeft: theme.spacing(1),\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  fabicon: {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n    borderRadius: 20,\n    zIndex: 2,\n  },\n  locationField: {\n    minWidth: 150,\n    maxWidth: 450,\n  },\n  eventBox: {\n    minWidth: 200,\n    maxWidth: 500,\n  },\n  textfield: {\n    width: 200,\n  },\n}));\n\nexport const PostButton = () => {\n  const classes = useStyles();\n\n  // Get user's email address\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState(\"\");\n  useEffect(() => {\n    const fetchIsLoggedIn = async () => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          setLoggedInUserEmail(user.email!);\n        } else {\n          setLoggedInUserEmail(\"\");\n        }\n      });\n    };\n    fetchIsLoggedIn();\n  }, [loggedInUserEmail]);\n\n  //pushing into Firebase\n  var database = firebase.database();\n  const [eventName, setEventName] = React.useState(\"\");\n  const [eventLocation, setEventLocation] = React.useState(\"\");\n  const [eventType, setEventType] = React.useState(\"\");\n  const [eventTime, setEventTime] = React.useState<Date | null>(new Date());\n  const [submitDisabled, setSubmitDisabled] = React.useState(true);\n\n  function PushData() {\n    const newPostKey = database.ref().child(\"events\").push().key;\n    var postData = {\n      id: newPostKey,\n      eventName: eventName,\n      eventLocation: eventLocation,\n      eventType: eventType,\n      eventTime: eventTime?.getTime(),\n      hostEmail: loggedInUserEmail,\n      rsvpList: [loggedInUserEmail],\n    };\n\n    var updates: any = {};\n    updates[\"events/\" + newPostKey] = postData;\n\n    console.log(firebase.database().ref().update(updates));\n  }\n\n  const handleDropDownChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setEventType(event.target.value as string);\n    checkValidity();\n  };\n  const handleEventNameInput = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setEventName(event.target.value as string);\n    checkValidity();\n  };\n\n  //delete key check\n  const handleKeyPress = () => {\n    checkValidity();\n  };\n\n  const handleEventLocationInput = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setEventLocation(event.target.value as string);\n    checkValidity();\n  };\n\n  const handleEventTime = (date: Date | null) => {\n    setEventTime(date);\n    checkValidity();\n  };\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#EE6C4D\",\n        light: \"#ff9b79\",\n        dark: \"#b53a22\",\n      },\n      secondary: {\n        main: \"#4C5760\",\n        light: \"#78848d\",\n        dark: \"#242e36\",\n      },\n    },\n  });\n\n  function checkValidity() {\n    if (\n      eventName !== \"\" &&\n      eventLocation !== \"\" &&\n      eventType !== \"\" &&\n      eventTime != null\n    ) {\n      setSubmitDisabled(false);\n    } else {\n      setSubmitDisabled(true);\n    }\n  }\n\n  function refreshPage() {\n    window.location.reload();\n  }\n\n  function postButton() {\n    PushData();\n    refreshPage();\n  }\n\n  return (\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n      {(popupState) => (\n        <div>\n          {/* Floating action button in the bottom right corner, the styles are defined in useStyles */}\n          <ThemeProvider theme={theme}>\n            <Fab\n              color=\"primary\"\n              variant=\"extended\"\n              //variant=\"outlined\"\n              className={classes.fabicon}\n              {...bindTrigger(popupState)}\n            >\n              <AddIcon />\n              New Event\n            </Fab>\n          </ThemeProvider>\n          {/* Opens popover, the rest inside is self explanatory */}\n          <Popover\n            {...bindPopover(popupState)}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n            }}\n            transformOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\",\n            }}\n          >\n            {/* Box that shows up when button is clicked, all following tags are self explanatory*/}\n            <ThemeProvider theme={theme}>\n              <Box p={2} className={classes.eventBox}>\n                <Typography>\n                  <Grid container spacing={2}>\n                    <Grid item>\n                      <Typography variant=\"h6\">Create Event</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography>\n                        <FormControl>\n                          <TextField\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            className={classes.textfield}\n                            label=\"Event Name\"\n                            onKeyPress={handleKeyPress}\n                            onChange={handleEventNameInput}\n                            required\n                          ></TextField>\n                        </FormControl>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Typography>\n                        <TextField\n                          color=\"secondary\"\n                          required\n                          variant=\"outlined\"\n                          className={classes.textfield}\n                          label=\"Event Location\"\n                          onKeyPress={handleKeyPress}\n                          onChange={handleEventLocationInput}\n                        ></TextField>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Typography>\n                        <FormControl\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                          required\n                        >\n                          <InputLabel>Select Event Types</InputLabel>\n                          <Select\n                            color=\"secondary\"\n                            value={eventType}\n                            onChange={handleDropDownChange}\n                            label=\"Event Type\"\n                            autoWidth\n                          >\n                            <MenuItem color=\"secondary\" value={\"Campus Event\"}>\n                              Campus Event\n                            </MenuItem>\n                            <MenuItem color=\"secondary\" value={\"Study Sesh\"}>\n                              Study Sesh\n                            </MenuItem>\n                            <MenuItem color=\"secondary\" value={\"House Party\"}>\n                              House Party\n                            </MenuItem>\n                          </Select>\n                        </FormControl>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Typography>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                          <DateTimePicker\n                            required\n                            color=\"secondary\"\n                            label=\"Event Time\"\n                            inputVariant=\"outlined\"\n                            className={classes.dateAndTime}\n                            value={eventTime}\n                            onChange={handleEventTime}\n                            onError={console.log}\n                            disablePast\n                            InputProps={{\n                              endAdornment: (\n                                <InputAdornment position=\"end\">\n                                  <IconButton>\n                                    <EventRoundedIcon />\n                                  </IconButton>\n                                </InputAdornment>\n                              ),\n                            }}\n                          />\n                        </MuiPickersUtilsProvider>\n                      </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Button\n                        onClick={postButton}\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        endIcon={<Icon>send</Icon>}\n                        disabled={submitDisabled}\n                      >\n                        Post\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Typography>\n              </Box>\n            </ThemeProvider>\n          </Popover>\n        </div>\n      )}\n    </PopupState>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/justLogo.e643f375.png\";","export default __webpack_public_path__ + \"static/media/HomeHeader.7353d340.png\";","import { Grid, Typography } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { Info, InfoSubtitle, InfoTitle } from \"@mui-treasury/components/info\";\n\n// function GetUserEmail() {\n//   const auth = firebase.auth();\n//   const user = auth.currentUser;\n//   if (user) {\n//     console.log(user.email);\n//     return user.email;\n//   } else {\n//     console.log(\"not logged in\");\n//     return \"Not Logged In\";\n//   }\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  userEmail: {\n    paddingBottom: 5,\n    paddingLeft: 5,\n  },\n  gridContainerEmailIcon: {\n    paddingTop: 10,\n    paddingBottom: 5,\n  },\n  typography: {\n    fontSize: 35,\n  },\n}));\n\nexport const SignedInUserEmail = () => {\n  const classes = useStyles();\n  const auth = firebase.auth();\n  const user = auth.currentUser;\n  if (user) {\n    console.log(user.email);\n    var email: any;\n    email = user.email;\n  } else {\n    email = \"Not Logged In\";\n  }\n\n  return (\n    <Grid\n      container\n      direction=\"row-reverse\"\n      justifyContent=\"flex-end\"\n      alignItems=\"center\"\n      className={classes.gridContainerEmailIcon}\n    >\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Avatar sx={{ bgcolor: \"#EE6C4D\", width: 80, height: 80 }}>\n          <Typography className={classes.typography}>KC</Typography>\n        </Avatar>\n        &nbsp;\n      </Grid>\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <InfoSubtitle>{email}</InfoSubtitle>\n      </Grid>\n    </Grid>\n  );\n};\n","import {\n  Typography,\n  AppBar,\n  Box,\n  Popover,\n  Button,\n  Avatar,\n  MenuItem,\n  Paper,\n} from \"@material-ui/core\";\nimport { Icon } from \"@iconify/react\";\n\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Toolbar } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport logo from \"../logos/justLogo.png\";\nimport logoText from \"../logos/HomeHeader.png\";\nimport PopupState, { bindPopover } from \"material-ui-popup-state\";\nimport { bindTrigger } from \"material-ui-popup-state/hooks\";\nimport React from \"react\";\nimport { auth } from \"../firebaseSetup\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { SignedInUserEmail } from \"./signedInUserEmail\";\nimport MeetingRoomRoundedIcon from \"@mui/icons-material/MeetingRoomRounded\";\nimport { Link, Menu, styled } from \"@mui/material\";\nimport { BugReportRounded, HelpOutlineRounded } from \"@material-ui/icons\";\nimport { Info, InfoSubtitle, InfoTitle } from \"@mui-treasury/components/info\";\n\n// import Stack from \"@mui/material/Stack\";\n\n// import LocalBarIcon from \"@material-ui/icons/LocalBar\";\n// import SchoolRoundedIcon from \"@material-ui/icons/SchoolRounded\";\n// import BackpackRoundedIcon from \"@material-ui/icons/BackpackRounded\";\n// import Slide from \"@mui/material/Slide\";\n// // import { Chip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    borderRadius: 20,\n    borderColor: \"#becddc\",\n    alignSelf: \"center\",\n    textTransform: \"none\",\n    fontFamily: \"'Sen', sans-serif\",\n  },\n\n  toolbar: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    backgroundColor: \"#ffffff\",\n  },\n  secondToolobar: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    backgroundColor: \"#ffffff\",\n  },\n  accountIcon: {\n    minHeight: 30,\n    minWidth: 30,\n    color: \"black\",\n  },\n  appicon: {\n    height: \"4%\",\n    width: \"4%\",\n    minHeight: 36,\n    minWidth: 36,\n    maxHeight: 56,\n    maxWidth: 56,\n    paddingBlock: 2,\n  },\n  fabicon: {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n  },\n  logoButton: {\n    maxHeight: 45,\n    maxWidth: 45,\n  },\n  logoText: {\n    maxHeight: 43,\n    maxWidth: 95,\n    minHeight: 32,\n    minWidth: 71,\n    paddingTop: 5,\n  },\n  linkButton: {\n    textTransform: \"none\",\n    fontFamily: \"'Sen', sans-serif\",\n  },\n  chips: {\n    maxWidth: \"125rem\",\n    maxHeight: \"400rem\",\n    minWidth: \"10rem\",\n    minHeight: \"32rem\",\n  },\n  buttonChips: {\n    textTransform: \"none\",\n    borderRadius: 60,\n    height: 160,\n  },\n}));\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport const ToolbarAndChips = () => {\n  const classes = useStyles();\n  //this will be called later.\n\n  //code to deal with opening links \"dropdown\"\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  //end dropdown code\n\n  //signout function\n  function signOut() {\n    auth\n      .signOut()\n      .then(() => {\n        refreshPage();\n      })\n      .catch((error) => {\n        console.log(\"error logging in\", error);\n      });\n  }\n\n  //refreshes page after logging out so user cannot access stuff after logging out\n  function refreshPage() {\n    window.location.reload();\n  }\n\n  //to be implented later: chips with event types\n\n  // const [flag1, setFlag1] = React.useState(true);\n  // const [flag2, setFlag2] = React.useState(true);\n  // const [flag3, setFlag3] = React.useState(true);\n  // const handleClickCampus = () => {\n  //   setFlag1(!flag1);\n  // };\n  // const handleClickStudy = () => {\n  //   setFlag2(!flag2);\n  // };\n  // const handleClickParty = () => {\n  //   setFlag3(!flag3);\n  // };\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#EE6C4D\",\n        light: \"#ff9b79\",\n        dark: \"#b53a22\",\n      },\n      secondary: {\n        main: \"#4C5760\",\n        light: \"#78848d\",\n        dark: \"#242e36\",\n      },\n    },\n  });\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      elevation={0}\n      style={{ margin: 0, width: \"100%\" }}\n    >\n      <Toolbar className={classes.toolbar}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Grid\n              container\n              spacing={0}\n              direction=\"row\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <IconButton className={classes.logoButton} onClick={refreshPage}>\n                <Avatar className={classes.appicon} src={logo} />\n              </IconButton>\n              <img src={logoText} className={classes.logoText} alt=\"logoText\" />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n              {(popupState) => (\n                <div>\n                  <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    {...bindTrigger(popupState)}\n                  >\n                    <AccountCircle\n                      className={classes.accountIcon}\n                    ></AccountCircle>\n                  </IconButton>\n\n                  <Popover\n                    {...bindPopover(popupState)}\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    }}\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"right\",\n                    }}\n                    style={{ borderRadius: \"5rem\" }}\n                  >\n                    <Box p={1} style={{ borderRadius: \"1.5rem\" }}>\n                      <Typography style={{ borderRadius: \"1.5rem\" }}>\n                        <ThemeProvider theme={theme}>\n                          {/* Here comes the first name extracted from the email */}\n                          <InfoSubtitle>\n                            <SignedInUserEmail></SignedInUserEmail>\n                          </InfoSubtitle>\n                          <Box\n                            m={6}\n                            style={{ borderRadius: \"1.5rem\" }}\n                            pt={1}\n                          ></Box>\n                          <Grid\n                            container\n                            direction=\"column\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                          >\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              onClick={signOut}\n                              className={classes.button}\n                              startIcon={<MeetingRoomRoundedIcon />}\n                            >\n                              Logout\n                            </Button>\n                          </Grid>\n                          <Box m={1} pt={0}></Box>\n                          <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                          >\n                            <Grid item>\n                              <Button\n                                id=\"basic-button\"\n                                aria-controls=\"basic-menu\"\n                                aria-haspopup=\"true\"\n                                aria-expanded={open ? \"true\" : undefined}\n                                onClick={handleClick}\n                                className={classes.linkButton}\n                              >\n                                Feedback\n                              </Button>\n\n                              <Menu\n                                id=\"basic-menu\"\n                                anchorEl={anchorEl}\n                                open={open}\n                                onClose={handleClose}\n                                MenuListProps={{\n                                  \"aria-labelledby\": \"basic-button\",\n                                }}\n                              >\n                                <Link\n                                  href=\"mailto:suggestions@kaglet.app\"\n                                  color=\"#555555\"\n                                  underline=\"none\"\n                                >\n                                  <MenuItem>\n                                    <Box m={0.5} pt={1}>\n                                      <BugReportRounded fontSize=\"small\" />\n                                    </Box>\n                                    Bugs or Suggestions?\n                                  </MenuItem>\n                                </Link>\n                                <Link\n                                  href=\"mailto:help@kaglet.app\"\n                                  color=\"#555555\"\n                                  underline=\"none\"\n                                >\n                                  <MenuItem>\n                                    <Box m={0.5} pt={1}>\n                                      <HelpOutlineRounded fontSize=\"small\" />\n                                    </Box>\n                                    Need help?\n                                  </MenuItem>\n                                </Link>\n\n                                <Link\n                                  href=\"https://discord.link/KzooKaglet\"\n                                  color=\"#555555\"\n                                  underline=\"none\"\n                                >\n                                  <MenuItem>\n                                    <Box m={0.5} pt={1}>\n                                      <Icon icon=\"akar-icons:discord-fill\" />\n                                    </Box>\n                                    Join Our Discord!\n                                  </MenuItem>\n                                </Link>\n                              </Menu>\n                            </Grid>\n                            {/* <Grid item>&ensp;&middot;&ensp;</Grid>\n                            <Grid item>\n                              <Link\n                                href=\"https://usaidbinshafqat.com/\"\n                                color=\"#555555\"\n                              >\n                                About Us\n                              </Link>\n                            </Grid> */}\n                          </Grid>\n                        </ThemeProvider>\n                      </Typography>\n                    </Box>\n                  </Popover>\n                </div>\n              )}\n            </PopupState>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/partyImage1.59010835.png\";","export default __webpack_public_path__ + \"static/media/campusImage1.c1c2f219.png\";","export default __webpack_public_path__ + \"static/media/studyImage1.b669a69c.png\";","export default __webpack_public_path__ + \"static/media/studyImage2.54d40e84.png\";","export default __webpack_public_path__ + \"static/media/studyImage3.65de07e1.png\";","export default __webpack_public_path__ + \"static/media/campusImage2.91f3a786.png\";","export default __webpack_public_path__ + \"static/media/campusImage3.b8d12bb7.png\";","export default __webpack_public_path__ + \"static/media/partyImage2.9159f47b.png\";","export default __webpack_public_path__ + \"static/media/partyImage3.9874ef6e.png\";","export default __webpack_public_path__ + \"static/media/1.9a420cb2.png\";","export default __webpack_public_path__ + \"static/media/2.9eef7d99.png\";","export default __webpack_public_path__ + \"static/media/3.afa1c7de.png\";","export default __webpack_public_path__ + \"static/media/4.50a0415d.png\";","export default __webpack_public_path__ + \"static/media/5.89672f93.png\";","import { Typography } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport React from \"react\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport Alert from \"@mui/material/Alert\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Avatar from \"@mui/material/Avatar\";\nimport AvatarGroup from \"@mui/material/AvatarGroup\";\nimport Grid from \"@mui/material/Grid\";\nimport avatar1 from \"../avatars/1.png\";\nimport avatar2 from \"../avatars/2.png\";\nimport avatar3 from \"../avatars/3.png\";\nimport avatar4 from \"../avatars/4.png\";\nimport avatar5 from \"../avatars/5.png\";\nimport { Info, InfoSubtitle, InfoTitle } from \"@mui-treasury/components/info\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    borderRadius: 20,\n    textTransform: \"none\",\n    display: \"inline-block\",\n    fontFamily: \"'Sen', sans-serif\",\n  },\n  rsvpCount: {\n    paddingBottom: 7,\n    paddingLeft: 10,\n  },\n  attending: {\n    paddingLeft: 6,\n    fontFamily: \"'Nunito', 'sans-serif'\",\n    textAlign: \"left\",\n    fontSize: \"1.3rem\",\n  },\n}));\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: \"#EE6C4D\",\n//       light: \"#ff9b79\",\n//       dark: \"#b53a22\",\n//     },\n//     secondary: {\n//       main: \"#4C5760\",\n//       light: \"#78848d\",\n//       dark: \"#242e36\",\n//     },\n//   },\n// });\n\nexport interface RsvpDetails {\n  eventID?: string;\n  rsvpList?: any;\n}\n\nconst database = firebase.database();\n\nlet check = false;\n\nfunction UIDarray(eventID?: string, rsvpList?: any) {\n  const auth = firebase.auth();\n  const user = auth.currentUser;\n\n  if (user) {\n    if (!rsvpList.includes(user.email)) {\n      rsvpList.push(user.email);\n      PushFirebase(rsvpList, eventID);\n    } else {\n      //setCheck(true);\n      check = true;\n      // snackbar shows up saying you're already going\n      // to the event, add to calendar here\n    }\n  }\n}\n\nfunction PushFirebase(rsvpList?: any, eventID?: string) {\n  database.ref(\"events/\" + eventID + \"/\").update({\n    rsvpList: rsvpList,\n  });\n}\n\nfunction randomGeneratortexts() {\n  const min = 0;\n  const max = 10;\n  const random = min + Math.random() * (max - min);\n\n  return random;\n}\n\nfunction chooseText() {\n  let text = \"\";\n  let random = Math.round(randomGeneratortexts());\n  if (random === 0) {\n    text = \"I'll attend 😁\";\n  } else if (random === 1) {\n    text = \"I'm coming 😉\";\n  } else if (random === 2) {\n    text = \"I will be coming 😁\";\n  } else if (random === 3) {\n    text = \"I'm down 🥳\";\n  } else if (random === 4) {\n    text = \"Sign me up 😋\";\n  } else if (random === 5) {\n    text = \"I'm up for it 😁\";\n  } else if (random === 6) {\n    text = \"RSVP 👔\";\n  } else if (random === 7) {\n    text = \"I'll be there 😏\";\n  } else if (random === 8) {\n    text = \"I'll drop in 😎\";\n  } else if (random === 9) {\n    text = \"I'll join 🙃\";\n  } else if (random === 10) {\n    text = \"I'll pop by 🐣\";\n  }\n\n  console.log(text);\n  return text;\n}\n\nfunction randomAvatarPicker() {\n  const min = 0;\n  const max = 7;\n  const random = Math.round(randomGenerator());\n  let imageName = \"\";\n\n  if (random === 0) {\n    imageName = avatar1;\n  } else if (random === 1) {\n    imageName = avatar2;\n  } else if (random === 2) {\n    imageName = avatar3;\n  } else if (random === 3) {\n    imageName = avatar4;\n  } else {\n    imageName = avatar5;\n  }\n  return imageName;\n}\n\nfunction randomGenerator() {\n  const min = 0;\n  const max = 4;\n  const random = min + Math.random() * (max - min);\n\n  return random;\n}\n\nexport const PlusOneButton: React.FC<RsvpDetails> = (props: RsvpDetails) => {\n  const classes = useStyles();\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\n  const [openSuccess, setOpenSuccess] = React.useState(false);\n  const [openError, setOpenError] = React.useState(false);\n\n  const handleClickSuccess = () => {\n    setOpenSuccess(true);\n  };\n\n  const handleCloseSuccess = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSuccess(false);\n  };\n\n  const handleClickError = () => {\n    setOpenError(true);\n  };\n\n  const handleCloseError = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenError(false);\n  };\n\n  // const theme = createTheme({\n  //   palette: {\n  //     primary: {\n  //       main: \"#EE6C4D\",\n  //       light: \"#ff9b79\",\n  //       dark: \"#b53a22\",\n  //     },\n  //     secondary: {\n  //       main: \"#4C5760\",\n  //       light: \"#78848d\",\n  //       dark: \"#242e36\",\n  //     },\n  //   },\n  // });\n\n  function handleDisable() {\n    setSubmitDisabled(true);\n  }\n\n  function validity() {\n    UIDarray(props.eventID, props.rsvpList);\n    if (check === false) {\n      handleClickSuccess();\n      handleDisable();\n      incrementCount();\n    } else {\n      handleClickError();\n      handleDisable();\n    }\n  }\n\n  function incrementCount() {\n    setCount(count + 1);\n  }\n\n  const renderButtons = (\n    <Button\n      disabled={submitDisabled}\n      size=\"large\"\n      color=\"primary\"\n      variant=\"outlined\"\n      className={classes.button}\n      onClick={() => {\n        validity();\n      }}\n    >\n      {chooseText()}\n    </Button>\n  );\n\n  const [count, setCount] = React.useState(props.rsvpList.length);\n  const AvatarList = () => (\n    <div>\n      <Avatar src={randomAvatarPicker()} />\n    </div>\n  );\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>{renderButtons}</Grid>\n\n        <Grid item style={{ paddingTop: 10 }}>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <AvatarGroup\n                max={3}\n                spacing={\"medium\"}\n                style={{ justifyContent: \"left\", display: \"flex\" }}\n              >\n                {[...Array(count)].map((value: undefined, index: number) => (\n                  <AvatarList />\n                ))}\n              </AvatarGroup>\n            </Grid>\n            <Grid item className={classes.attending}>\n              <InfoSubtitle>attending</InfoSubtitle>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Typography component=\"div\" align=\"center\">\n        <div>\n          <Snackbar\n            autoHideDuration={2000}\n            open={openSuccess}\n            onClose={handleCloseSuccess}\n          >\n            <Alert onClose={handleCloseSuccess} severity=\"success\">\n              You're on the list! 👍\n            </Alert>\n          </Snackbar>\n\n          <Snackbar\n            autoHideDuration={2000}\n            open={openError}\n            onClose={handleCloseError}\n          >\n            <Alert onClose={handleCloseError} severity=\"error\">\n              You're already on the list! 😁\n            </Alert>\n          </Snackbar>\n        </div>\n      </Typography>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardMedia,\n  NoSsr,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardContent from \"@material-ui/core/CardContent\";\n// import { createTheme } from \"@material-ui/core/styles\";\nimport partyImage1 from \"../logos/partyImage1.png\";\nimport campusImage1 from \"../logos/campusImage1.png\";\nimport studyImage1 from \"../logos/studyImage1.png\";\nimport studyImage2 from \"../logos/studyImage2.png\";\nimport studyImage3 from \"../logos/studyImage3.png\";\nimport campusImage2 from \"../logos/campusImage2.png\";\nimport campusImage3 from \"../logos/campusImage3.png\";\nimport partyImage2 from \"../logos/partyImage2.png\";\nimport partyImage3 from \"../logos/partyImage3.png\";\n// import LocalBarIcon from \"@material-ui/icons/LocalBar\";\n// import SchoolRoundedIcon from \"@material-ui/icons/SchoolRounded\";\n// import BackpackRoundedIcon from \"@material-ui/icons/BackpackRounded\";\nimport { Row } from \"@mui-treasury/components/flex\";\nimport { PlusOneButton } from \"./PlusOneButton\";\nimport { Info, InfoSubtitle, InfoTitle } from \"@mui-treasury/components/info\";\nimport { useNewsInfoStyles } from \"@mui-treasury/styles/info/news\";\nimport GoogleFontLoader from \"react-google-font-loader\";\nimport { IconButton, IconButtonProps } from \"@mui/material\";\nimport { createTheme, styled } from \"@mui/material/styles\";\nimport Collapse from \"@mui/material/Collapse\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport EmailTwoToneIcon from \"@mui/icons-material/EmailTwoTone\";\nimport CalendarTodayTwoToneIcon from \"@mui/icons-material/CalendarTodayTwoTone\";\nimport AddToCalendar from \"react-add-to-calendar\";\nimport MessageTwoToneIcon from \"@mui/icons-material/MessageTwoTone\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardcomponent: {\n    minWidth: 300,\n    position: \"relative\",\n    boxShadow: \"0 8px 24px 0 rgba(0,0,0,0.12)\",\n    overflow: \"visible\",\n    borderRadius: \"1.5rem\",\n    transition: \"0.4s\",\n    \"&:hover\": {\n      transform: \"translateY(-10px)\",\n      \"& $shadow\": {\n        bottom: \"-1.5rem\",\n      },\n      \"& $shadow2\": {\n        bottom: \"-2.5rem\",\n      },\n    },\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      zIndex: 0,\n      display: \"block\",\n      width: \"100%\",\n      bottom: -1,\n      height: \"100%\",\n      borderRadius: \"1.5rem\",\n      backgroundColor: \"rgba(0,0,0,0)\",\n    },\n  },\n  username: {\n    textAlign: \"left\",\n  },\n  leftAlignText: {\n    textAlign: \"left\",\n    justifyContent: \"center\",\n    paddingLeft: 10,\n  },\n  cardLooks: {\n    borderRadius: 12,\n  },\n  cardTitle: {\n    //fontSize: 20,\n    paddingLeft: 10,\n  },\n  cardSubtitle: {\n    //fontSize: 17,\n    paddingLeft: 5,\n  },\n  media: {\n    minHeight: 220,\n  },\n  titleIcon: {\n    paddingTop: 7,\n  },\n  locationSubtitle: {\n    paddingLeft: 10,\n  },\n  join: {\n    background: \"linear-gradient(to top, #638ef0, #82e7fe)\",\n    \"& > *\": {\n      textTransform: \"none !important\",\n    },\n  },\n  main: {\n    textAlign: \"left\",\n    justifyContent: \"center\",\n    paddingLeft: \"10\",\n    overflow: \"hidden\",\n    borderTopLeftRadius: \"1.5rem\",\n    borderTopRightRadius: \"1.5rem\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: 0,\n      display: \"block\",\n      width: \"100%\",\n      height: \"100%\",\n      background: \"linear-gradient(to top, #543b31, rgba(0,0,0,0))\",\n    },\n  },\n  content: {\n    position: \"absolute\",\n    bottom: 0,\n    width: \"100%\",\n    zIndex: 1,\n    padding: \"1.5rem 1.5rem 1rem\",\n  },\n  tag: {\n    display: \"inline-block\",\n    fontFamily: \"'Sen', sans-serif\",\n    backgroundColor: \"#ff5dac\",\n    borderRadius: \"0.5rem\",\n    padding: \"2px 0.5rem\",\n    color: \"#fff\",\n    marginBottom: \"0.5rem\",\n  },\n  title: {\n    fontFamily: \"'Nunito', 'sans-serif'\",\n    fontSize: \"1.3rem\",\n    fontWeight: 800,\n    color: \"#fff\",\n  },\n  author: {\n    textAlign: \"left\",\n    position: \"relative\",\n    borderBottomLeftRadius: \"1.5rem\",\n    borderBottomRightRadius: \"1.5rem\",\n  },\n\n  avatar: {\n    width: 48,\n    height: 48,\n  },\n  timeText: {\n    paddingLeft: 6,\n    fontFamily: \"'Nunito', 'sans-serif'\",\n    textAlign: \"left\",\n    fontSize: \"1.3rem\",\n  },\n  divDeets: {\n    width: \"90%\",\n  },\n  textIcon: {\n    color: \"#EE6C4D\",\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\nexport interface EventDetails {\n  name: string;\n  type?: string;\n  location?: string;\n  time?: string;\n  email?: string;\n  rsvpList?: any;\n  eventID?: string;\n}\n\nfunction randomGenerator() {\n  const min = 0;\n  const max = 2;\n  const random = min + Math.random() * (max - min);\n\n  return random;\n}\n\nfunction chooseImage(type?: string) {\n  let imageName = \"\";\n  let random = Math.round(randomGenerator());\n  if (type === \"Study Sesh\") {\n    if (random === 0) {\n      imageName = studyImage1;\n    } else if (random === 1) {\n      imageName = studyImage2;\n    } else {\n      imageName = studyImage3;\n    }\n  }\n  if (type === \"House Party\") {\n    if (random === 0) {\n      imageName = partyImage1;\n    } else if (random === 1) {\n      imageName = partyImage2;\n    } else {\n      imageName = partyImage3;\n    }\n  }\n  if (type === \"Campus Event\") {\n    if (random === 0) {\n      imageName = campusImage1;\n    } else if (random === 1) {\n      imageName = campusImage2;\n    } else {\n      imageName = campusImage3;\n    }\n  }\n  console.log(imageName);\n  return imageName;\n}\n\n// function chooseIcon(type?: string) {\n//   let typeIcon: any = \"\";\n//   if (type === \"Study Sesh\") {\n//     typeIcon = <BackpackRoundedIcon />;\n//   }\n//   if (type === \"House Party\") {\n//     typeIcon = <LocalBarIcon />;\n//   }\n//   if (type === \"Campus Event\") {\n//     typeIcon = <SchoolRoundedIcon />;\n//   }\n//   return typeIcon;\n// }\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\n  marginLeft: \"auto\",\n  transition: theme.transitions.create(\"transform\", {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nexport const NewCardUI: React.FC<EventDetails> = (props: EventDetails) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const openInNewTab = () => {\n    const mainUrl = \"https://teams.microsoft.com/l/chat/0/0?users=\";\n    let emailUrl: any = props.email;\n    //let emailUrl2:string = 'usaidbin.shafqat19@kzoo.edu'\n    let fullUrl: string = mainUrl.concat(emailUrl);\n    const newWindow = window.open(fullUrl, \"_blank\", \"noopener,noreferrer\");\n    if (newWindow) newWindow.opener = null;\n  };\n  const addToCalendar = () => {\n    let eventCal = {\n      title: props.name,\n      description: \"This is the sample event provided as an example only\",\n      location: props.location,\n      startTime: props.time,\n      endTime: \"2016-09-16T21:45:00-04:00\",\n    };\n    {\n      <AddToCalendar event={eventCal} />;\n    }\n  };\n\n  return (\n    // holding the cards in this div, using useStyles from up top\n\n    <div className={classes.divDeets}>\n      <NoSsr>\n        <GoogleFontLoader fonts={[{ font: \"Nunito\", weights: [400, 800] }]} />\n      </NoSsr>\n      <Card className={classes.cardcomponent}>\n        <Box className={classes.main} minHeight={220} position={\"relative\"}>\n          <CardMedia\n            className={classes.media}\n            image={chooseImage(props.type)}\n          />\n          <div className={classes.content}>\n            <div className={classes.tag}>{props.time}</div>\n            <Typography className={classes.title}>\n              {props.name} @ {props.location}\n            </Typography>\n          </div>\n        </Box>\n        <Row\n          className={classes.author}\n          m={0}\n          p={1}\n          pt={2}\n          gap={2}\n          bgcolor={\"common.white\"}\n        >\n          <Info position={\"left\"} useStyles={useNewsInfoStyles}>\n            <InfoTitle className={classes.timeText}>\n              <PlusOneButton\n                eventID={props.eventID}\n                rsvpList={props.rsvpList}\n              />\n            </InfoTitle>\n          </Info>\n          <Info position={\"right\"} useStyles={useNewsInfoStyles}>\n            <ExpandMore\n              expand={expanded}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </ExpandMore>\n          </Info>\n        </Row>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent style={{ textAlign: \"left\" }}>\n            <Row\n              className={classes.author}\n              m={0}\n              p={1}\n              pt={2}\n              gap={2}\n              bgcolor={\"common.white\"}\n            >\n              <Info position={\"left\"} useStyles={useNewsInfoStyles}>\n                <InfoSubtitle style={{ paddingTop: 10, paddingLeft: 3 }}>\n                  {props.type} created by {props.email}\n                </InfoSubtitle>\n              </Info>\n\n              <Info position={\"right\"} useStyles={useNewsInfoStyles}>\n                <IconButton\n                  size=\"small\"\n                  className={classes.textIcon}\n                  onClick={() => openInNewTab()}\n                >\n                  <MessageTwoToneIcon className={classes.textIcon} />\n                </IconButton>\n                {/* <IconButton size=\"small\"\n                color=\"primary\"\n                onClick = {\n                  () => addToCalendar()\n                }>\n                <CalendarTodayTwoToneIcon />\n              </IconButton> */}\n              </Info>\n            </Row>\n          </CardContent>\n        </Collapse>\n      </Card>\n      &nbsp;\n    </div>\n  );\n};\n","import firebase from \"firebase\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport moment from \"moment\";\nimport { NewCardUI } from \"./NewCardUI\";\n\nexport const GetEventCards = () => {};\n\nexport const EventCardContainer = () => {\n  const [eventsList, setEventsList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      /** Backup method: REST API */\n      //   const result = await axios(\n      //     \"https://kaglet-91224-default-rtdb.firebaseio.com/events.json\"\n      //   );\n      // console.log(Object.values(result.data));\n      // setEventsList(Object.values(result.data));\n\n      var dateToday = new Date();\n\n      dateToday.setHours(dateToday.getHours() - 2);\n\n      var timeTwoHoursAgoMS = dateToday.getTime();\n\n      let allEvents = firebase\n        .database()\n        .ref(\"events\")\n        .startAfter(timeTwoHoursAgoMS)\n        .orderByChild(\"eventTime\");\n\n      allEvents.once(\"value\").then((snapshot) => {\n        // console.log(snapshot.val());\n        // setEventsList(Object.values(snapshot.val()));\n        var fetchedEvents = [] as any;\n        snapshot.forEach(function (child) {\n          fetchedEvents.push(child.val());\n        });\n        setEventsList(fetchedEvents);\n      });\n    };\n    fetchData();\n  }, []);\n\n  function timeConverter(timeFromFirebase: string) {\n    let dateString = timeFromFirebase;\n    let stringToDate = new Date(dateString);\n    return moment(stringToDate).format(\"MMMM Do, h:mm a\");\n  }\n\n  return (\n    <>\n      {Object.values(eventsList).map((event: any) => (\n        <NewCardUI\n          name={event.eventName}\n          time={timeConverter(event.eventTime)}\n          location={event.eventLocation}\n          type={event.eventType}\n          email={event.hostEmail}\n          rsvpList={event.rsvpList}\n          eventID={event.id}\n        />\n      ))}\n    </>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { PostButton } from \"./PostButton\";\nimport { Typography } from \"@material-ui/core\";\nimport { ToolbarAndChips } from \"./ToolbarAndChips\";\nimport { EventCardContainer } from \"./EventCardContainer\";\nimport firebase from \"firebase\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport GoogleFontLoader from \"react-google-font-loader\";\nimport { NoSsr } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 0,\n  },\n  title: {\n    fontFamily: \"'Nunito', 'sans-serif'\",\n    fontSize: \"1.8rem\",\n  },\n  subtitle: {\n    display: \"inline-block\",\n    fontFamily: \"'Sen', sans-serif\",\n    fontSize: \"1.3rem\",\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\n\nfunction LoggedOutUI() {\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <>\n      <NoSsr>\n        <GoogleFontLoader fonts={[{ font: \"Nunito\", weights: [400, 800] }]} />\n      </NoSsr>\n      <Grid container direction=\"column\" justifyContent=\"center\">\n        <Typography\n          component=\"div\"\n          align=\"center\"\n          ///still figuring out\n          style={{ height: \"100vh\" }}\n        >\n          {/* Toolbar component being imported from the other screen */}\n          <ToolbarAndChips />\n          &nbsp;\n          <Grid\n            container\n            spacing={2}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Typography className={classes.title}>\n              Please log in to view awesome K events!\n            </Typography>\n            &nbsp;\n            <Typography className={classes.subtitle}>\n              If you've logged in, try again in a non-private window.\n            </Typography>\n            &nbsp;\n            <ThemeProvider theme={theme}>\n              <Grid item>\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  className=\"subheading\"\n                  style={{ borderRadius: 20, padding: \"0.25rem 2rem\" }}\n                  onClick={() => history.push(\"/login\")}\n                >\n                  Login\n                </Button>\n              </Grid>\n            </ThemeProvider>\n          </Grid>\n        </Typography>\n      </Grid>\n    </>\n  );\n}\n\nfunction LoggedInUI() {\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Typography component=\"div\" align=\"center\" style={{ height: \"100vh\" }}>\n        <ToolbarAndChips />\n        &nbsp;\n        <Grid\n          container\n          spacing={2}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <EventCardContainer />\n        </Grid>\n        <Grid item>\n          <PostButton />\n        </Grid>\n      </Typography>\n    </Grid>\n  );\n}\n//homescreen function which is checking if the user is logged in or not. If user, then set user id etc etc.\nexport const HomeScreen = () => {\n  const [loggedInUserId, setLoggedInUserId] = useState(\"\");\n  useEffect(() => {\n    const fetchIsLoggedIn = async () => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          setLoggedInUserId(user.uid);\n        } else {\n          setLoggedInUserId(\"\");\n        }\n      });\n    };\n    fetchIsLoggedIn();\n  }, [loggedInUserId]);\n  const classes = useStyles();\n  //return statement that contains the UI\n  return (\n    <div className={classes.root}>\n      {/* only shows this if the user is logged in (it should contain something in the string if it exists) */}\n      {loggedInUserId === \"\" && (\n        <LoggedOutUI />\n\n        //Grid holding all elements in the homescreen UI when logged in\n      )}\n\n      {/* otherwise, if it's not an empty string, it should print this. All tags are self-explantory (from Material UI) */}\n      {loggedInUserId !== \"\" && <LoggedInUI />}\n    </div>\n  );\n};\n","import { Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@mui/material/Button\";\nimport {\n  makeStyles,\n  createTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { LoginLogic } from \"./LoginLogic\";\nimport { Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexFlow: \"column\",\n    display: \"flex\",\n    height: \"100vh\",\n    width: \"100vh\",\n  },\n  button: {\n    alignContent: \"center\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n    borderRadius: 20,\n    padding: \"0.25rem 2rem\",\n  },\n  logo: {\n    height: 300,\n    width: 300,\n    alignContent: \"center\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n  },\n  toolbar: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    backgroundColor: \"#ffffff\",\n  },\n  form: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n    },\n  },\n\n  textfield: {\n    width: 300,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n});\n\nconst LoginButtonFunctions = () => {\n  const classes = useStyles();\n  return (\n    <Button\n      size=\"large\"\n      variant=\"outlined\"\n      color=\"primary\"\n      className={classes.button}\n    >\n      Get Login Link\n    </Button>\n  );\n};\n\nconst LoginUIMobile = () => {\n  // image in back, login button on top\n  return (\n    <div style={{ height: \"70vh\", padding: 0, margin: 0 }}>\n      <Box\n        display=\"flex\"\n        flex=\"1\"\n        justifyContent=\"space-around\"\n        style={{ height: \"90vh\" }}\n      >\n        <Grid container justifyContent=\"center\" direction=\"column\">\n          <LoginLogic />\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nconst LoginUIBigScreen = () => {\n  return (\n    <div style={{ height: \"70vh\", margin: 0, padding: 0 }}>\n      <Box\n        display=\"flex\"\n        flex=\"1\"\n        justifyContent=\"space-around\"\n        style={{ height: \"70vh\" }}\n      >\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <LoginLogic />\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport const NewLoginUI = () => {\n  console.log(isMobile);\n\n  function isMobile() {\n    if (window.screen.width < 600) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return (\n    //if mobile\n    <>\n      <div>{isMobile() && <LoginUIMobile />}</div>\n\n      <div>{!isMobile() && <LoginUIBigScreen />}</div>\n      {/* <div> */}\n      {/* <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          style={{ minHeight: \"100vh\" }}\n        >\n          <LoginButtonFunctions />\n          <Grid item></Grid>\n        </Grid>\n      </div> */}\n    </>\n\n    //if not logged in\n  );\n};\n","import firebase from \"firebase\";\nimport { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { NewLoginUI } from \"./NewLoginUI\";\n\nexport const NewSplashScreen = () => {\n  //if the user is logged in, it redirects to the home page\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      redirectToHomepage();\n    }\n  });\n\n  function redirectToHomepage() {\n    window.location.href = \"https://kaglet.app/home\";\n  }\n  // only dealing with sending to other screens\n  return (\n    <div>\n      <Grid\n        container\n        spacing={0}\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <NewLoginUI />\n      </Grid>\n    </div>\n  );\n};\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { LoginLogic } from \"./components/LoginLogic\";\n// import { SplashScreen } from \"./components/SplashScreen\";\nimport { HomeScreen } from \"./components/HomeScreen\";\nimport { NewSplashScreen } from \"./components/NewSplashScreen\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#EE6C4D\",\n      light: \"#ff9b79\",\n      dark: \"#b53a22\",\n    },\n    secondary: {\n      main: \"#4C5760\",\n      light: \"#78848d\",\n      dark: \"#242e36\",\n    },\n  },\n  // typography: {\n  //   fontFamily: [\"Nunito\", \"Roboto\"].join(\",\"),\n  // },\n});\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <NewSplashScreen />\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginLogic />{\" \"}\n          </Route>\n          <Route exact path=\"/home\">\n            <HomeScreen />{\" \"}\n          </Route>\n          <Route exact path=\"/splashscreen\">\n            <NewSplashScreen />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}